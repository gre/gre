{"pageProps":{"id":"2012-05-03-html5-canvas-as-a-color-converter","year":"2012","month":"05","day":"03","slug":"html5-canvas-as-a-color-converter","content":"<img src=\"/images/2012/05/color-alpha-options.png\" alt=\"\" class=\"thumbnail-left\" />\n\n<p>I’m currently working on the User Interface of a scene editor for my <a href=\"http://gre.github.io/illuminated.js/\">Illuminated.js library</a> with some color and alpha picker.</p>\n<p>HTML5 now have the <code>&lt;input type=&quot;color&quot; /&gt;</code> and <code>&lt;input type=&quot;range&quot; /&gt;</code> which is nice. It works on Chrome and there are some <a href=\"https://github.com/bgrins/spectrum\">polyfills</a> to make it working on older browsers.</p>\n<p>We will now see how we can easily <strong>retrieve a rgba color from such an UI</strong>, regardless of the color format given by the color picker and <strong>combine the alpha component from the alpha range picker</strong>.</p>\n<blockquote>\n<p>We can implement an <strong>anythingToRGBA converter</strong> in 10 lines of Javascript!</p>\n</blockquote>\n<h2 id=\"what\">What?</h2>\n<p>Basically, for instance, you have this: <code>&quot;#ff6432&quot;</code> and <code>0.8</code></p>\n<p>and you want this: <code>&quot;rgba(255,100,50,0.8)&quot;</code></p>\n<p>which is this color: <span style=\"background: #ff6432; display: inline-block; width: 50px\">&nbsp;</span>.</p>\n<blockquote>\n<p>Well, of course, we could use a library with regexp parsers!</p>\n</blockquote>\n<p>But there is a lot of different formats available especially if you want to convert a color from <a href=\"http://www.w3.org/TR/css3-color/\">CSS</a>!</p>\n<p>Only for the <span style=\"color:blue\">blue</span> color, you have at least 7 different representations: <code>#00F</code>, <code>#0000FF</code>, <code>rgb(0,0,255)</code>, <code>rgba(0,0,255,1)</code>, <code>hsl(255,100%,50%)</code>, <code>hsla(255,100%,50%,1)</code>,<br>and… <code>blue</code>!</p>\n<blockquote>\n<p>Ouch, so let’s make a huge converter library!</p>\n</blockquote>\n<p>Nope! </p>\n<p>All of these are color formats are supported by CSS and also Canvas.<br><strong>So, why not just re-using what the browser can do?</strong></p>\n<!--more-->\n\n\n<h2 id=\"how\">How?</h2>\n<p>Because we have access to Canvas in Javascript, <strong>we can implement an anythingToRGBA converter in a few line of Javascript</strong>:</p>\n<pre><code class=\"language-javascript\">var getRGBA = (function(){  \n  var canvas = document.createElement(&quot;canvas&quot;);  \n  canvas.width = canvas.height = 1;  \n  var ctx = canvas.getContext(&quot;2d&quot;);  \n  return function (color, alpha) {  \n    ctx.clearRect(,,1,1);  \n    ctx.fillStyle = color;  \n    ctx.fillRect(,,1,1);  \n    var d = ctx.getImageData(,,1,1).data;  \n    return &#39;rgba(&#39; [ d[], d[1], d[2], alpha ] &#39;)&#39;;  \n  }  \n}());\n</code></pre>\n<p>You have now a ready to use Javascript color library! </p>\n<p><code>getRGBA(&quot;#ff6432&quot;, 0.8)</code> will returns <code>&quot;rgba(255,100,50,0.8)&quot;</code>.<br><code>getRGBA(&quot;red&quot;, 0.5)</code> will returns <code>&quot;rgba(255,0,0,0.5)&quot;</code>.</p>\n<p>You can “standardize” your color and use it anywhere!</p>\n<p><strong>Feel free to adapt the code to any other desired format.</strong></p>\n<p>We can easily make the reverse (give a rgba color and get the #RRGGBB and alpha values):</p>\n<pre><code class=\"language-javascript\">var extractColorAndAlpha = (function(){  \n  var canvas = document.createElement(&quot;canvas&quot;);  \n  canvas.width = canvas.height = 1;  \n  var ctx = canvas.getContext(&quot;2d&quot;);  \n  \n  function toHex (value) {   \n    var s = value.toString(16);   \n    if(s.length==1) s = &quot;0&quot; s;  \n    return s;  \n  }  \n  \n  return function (color) {  \n    ctx.clearRect(,,1,1);  \n    ctx.fillStyle = color;  \n    ctx.fillRect(,,1,1);  \n    var d = ctx.getImageData(,,1,1).data;  \n    return {  \n      color: &quot;#&quot; toHex(d[]) toHex(d[1]) toHex(d[2]),  \n      alpha: Math.round(1000*d[3]/255)/1000  \n    };  \n  }  \n}());\n</code></pre>\n","data":{"title":"HTML5 Canvas as a color converter","author":"Gaetan","description":"We can implement an anythingToRGBA converter in 10 lines of Javascript!","thumbnail":"/images/2012/05/color-alpha-options.png","layout":"post","permalink":"/2012/05/html5-canvas-as-a-color-converter/","tags":["canvas","javascript","color"]}},"__N_SSG":true}
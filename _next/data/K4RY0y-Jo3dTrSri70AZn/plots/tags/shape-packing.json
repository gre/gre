{"pageProps":{"tag":"shape-packing","plots":[{"n":"365","key":"./365/README.md","rustFile":"365/main.rs","sourceURL":"https://github.com/gre/gre/blob/master/plots/examples/365/main.rs","content":"<p>Entry for <a href=\"https://genuary.art/\">https://genuary.art/</a> Jan.3 &quot;Space&quot;</p>\n<p>Packing circles with various shapes. A4 watercolor paper, fountain pen and Diamine Bloody Brexit ink.</p>\n","data":{"title":"Space debris","thumbnail":"/images/plots/365.jpg","tags":["shape-packing","genuary"]}},{"n":"363","key":"./363/README.md","rustFile":"363/main.rs","sourceURL":"https://github.com/gre/gre/blob/master/plots/examples/363/main.rs","content":"<p>Entry for <a href=\"https://genuary.art/\">https://genuary.art/</a> Jan.1 &quot;Draw 10,000 of something.&quot;</p>\n<p>Packing circles with various filling techniques (same primitives as in &quot;Plottable Mountain Moons&quot;). A3 watercolor paper, fountain pen and Diamine Teal ink.</p>\n<img src=\"/images/plots/363zoom.jpg\" width=\"100%\">\n<img src=\"/images/plots/363zoom2.jpg\" width=\"100%\">\n<img src=\"/images/plots/363zoom3.jpg\" width=\"100%\">","data":{"title":"10000 various circles (A3)","thumbnail":"/images/plots/363.jpg","tags":["shape-packing","genuary"]}},{"n":"235","key":"./235/README.md","rustFile":"220/main.rs","sourceURL":"https://github.com/gre/gre/blob/master/plots/examples/220/main.rs","content":"","data":{"title":"Forgotten mountain moons","thumbnail":"/images/plots/235.jpg","sourceFolder":220,"tags":["shape-packing"]}},{"n":"234","key":"./234/README.md","rustFile":"234/main.rs","sourceURL":"https://github.com/gre/gre/blob/master/plots/examples/234/main.rs","content":"","data":{"title":"Green mountains","thumbnail":"/images/plots/234.jpg","tags":["shape-packing"]}},{"n":"220","key":"./220/README.md","rustFile":"220/main.rs","sourceURL":"https://github.com/gre/gre/blob/master/plots/examples/220/main.rs","content":"<p>Forgotten because it&#39;s one of the earliest prototype I had on the concept.</p>\n","data":{"title":"Forgotten mountain moons","thumbnail":"/images/plots/220.jpg","tags":["shape-packing"]}},{"n":"214","key":"./214/README.md","rustFile":"214/main.rs","sourceURL":"https://github.com/gre/gre/blob/master/plots/examples/214/main.rs","content":"","data":{"title":"Ring packing","thumbnail":"/images/plots/214.jpg","tags":["shape-packing"]}},{"n":"212","key":"./212/README.md","rustFile":"212/main.rs","sourceURL":"https://github.com/gre/gre/blob/master/plots/examples/212/main.rs","content":"","data":{"title":"Squares Noise Packing","thumbnail":"/images/plots/212.jpg","tags":["shape-packing"]}},{"n":"211","key":"./211/README.md","rustFile":"211/main.rs","sourceURL":"https://github.com/gre/gre/blob/master/plots/examples/211/main.rs","content":"<p>This plot was made for fun as a contest I did for colleagues, where I asked how much meters of fountain pen ink was used in this. The answer was 93.38 meters.</p>\n<p>That plot is gifted to a colleague who estimated at 100 meters.</p>\n<pre><code>Estimated print time: 1:39:35 (Hours, minutes, seconds)\nLength of path to draw: 93.38 m.\nPen-up travel distance: 289.31 m.\nTotal movement distance: 382.69 m.\n</code></pre>\n","data":{"title":"Crimson & Indigo Squares","thumbnail":"/images/plots/211.jpg","tags":["shape-packing"]}},{"n":"210","key":"./210/README.md","rustFile":"210/main.rs","sourceURL":"https://github.com/gre/gre/blob/master/plots/examples/210/main.rs","content":"","data":{"title":"Square Spiral Packing","thumbnail":"/images/plots/210.jpg","tags":["shape-packing"]}},{"n":"209","key":"./209/README.md","rustFile":"209/main.rs","sourceURL":"https://github.com/gre/gre/blob/master/plots/examples/209/main.rs","content":"","data":{"title":"Diagonal Stroke Packing","thumbnail":"/images/plots/209.jpg","tags":["shape-packing"]}},{"n":"208","key":"./208/README.md","rustFile":"208/main.rs","sourceURL":"https://github.com/gre/gre/blob/master/plots/examples/208/main.rs","content":"","data":{"title":"Cross Stroke Packing","thumbnail":"/images/plots/208.jpg","tags":["shape-packing"]}},{"n":"207","key":"./207/README.md","rustFile":"207/main.rs","sourceURL":"https://github.com/gre/gre/blob/master/plots/examples/207/main.rs","content":"","data":{"title":"Pentagon Spiral Packing","thumbnail":"/images/plots/207.jpg","tags":["shape-packing"]}},{"n":"206","key":"./206/README.md","rustFile":"206/main.rs","sourceURL":"https://github.com/gre/gre/blob/master/plots/examples/206/main.rs","content":"","data":{"title":"Blue Spiral Packing","thumbnail":"/images/plots/206.jpg","tags":["shape-packing"]}},{"n":"205","key":"./205/README.md","rustFile":"205/main.rs","sourceURL":"https://github.com/gre/gre/blob/master/plots/examples/205/main.rs","content":"<p>The best part of generative art is accumulating techniques and improving your creative coding skills. You explore your imagination and can combine different ideas and techniques over time once you have &quot;absorbed&quot; them in our playbook. IF you know N techniques, one more technique is now giving you <code>N*(N+1)</code> possibilities of outcomes. They can all be crossed over and combined together to produce results. It&#39;s exponential.</p>\n<p><strong>Here is the combination of shape packing, applied to triangle polygon, filled with one of my oldest &quot;fill&quot; algorithm that works by rotating around randomly sampled points.</strong></p>\n","data":{"title":"triangle noise spiral","thumbnail":"/images/plots/205.jpg","description":"combination of shape packing, applied to polygon, filled with one of my oldest fill algorithm that works by rotating around randomly sampled points","tags":["shape-packing"]}},{"n":"204","key":"./204/README.md","rustFile":"204/main.rs","sourceURL":"https://github.com/gre/gre/blob/master/plots/examples/204/main.rs","content":"<p>A variant of <a href=\"/plots/203\">plot#203</a>.</p>\n<blockquote>\n<p>I like randomness a lot. Exploring the beauty of noise is also recreating Nature&#39;s pattern and trying to put back some order in that randomness.</p>\n</blockquote>\n","data":{"title":"Bloody circles & ordered noise","thumbnail":"/images/plots/204.jpg","description":"I like randomness a lot. Exploring the beauty of noise is also recreating Nature's pattern and trying to put back some order in that randomness.","tags":["shape-packing"]}},{"n":"203","key":"./203/README.md","rustFile":"203/main.rs","sourceURL":"https://github.com/gre/gre/blob/master/plots/examples/203/main.rs","content":"<p>As you may notice, I like randomness a lot. Exploring the beauty of noise is also recreating Nature&#39;s pattern and trying to put back some order in that randomness.</p>\n<p>This creation is an unusual version of &quot;circle packing&quot; that instead of a pure random distribution will run a few times to actually try to find the biggest circle to place. This makes the distribution less random and way more ordered. However, the fact there is a &quot;a few times&quot; maximum tries gives some room for some randomness and not &quot;pure order&quot;.</p>\n<p>The algorithm at stake is relatively simple, I will have to improve it in future to parallelize the computation.</p>\n<pre><code class=\"language-rust\">fn packing(\n    seed: f64,\n    iterations: usize,\n    desired_count: usize,\n    optimize_size: usize, // &lt;--- number of retries to optimize the size \n    pad: f64,\n    container: &amp;VCircle,\n    min_scale: f64,\n    max_scale: f64,\n) -&gt; Vec&lt;VCircle&gt; {\n    let mut circles = Vec::new();\n    let mut tries = Vec::new();\n    let mut rng = rng_from_seed(seed);\n    let x1 = container.x - container.r;\n    let y1 = container.y - container.r;\n    let x2 = container.x + container.r;\n    let y2 = container.y + container.r;\n    let max_scale = max_scale.min(container.r);\n    for _i in 0..iterations {\n        let x: f64 = rng.gen_range(x1, x2);\n        let y: f64 = rng.gen_range(y1, y2);\n        if let Some(size) = search_circle_radius(&amp;container, &amp;circles, x, y, min_scale, max_scale) {\n            let circle = VCircle::new(x, y, size - pad);\n            // innovation happens here, basically we keep pushing until we reach the nb\n            tries.push(circle);\n            if tries.len() &gt; optimize_size {\n                // then we grab the biggest\n                tries.sort_by(|a, b| b.r.partial_cmp(&amp;a.r).unwrap());\n                let c = tries[0];\n                circles.push(c.clone());\n                tries = Vec::new();\n            }\n        }\n        if circles.len() &gt; desired_count {\n            break;\n        }\n    }\n    circles\n}\n</code></pre>\n","data":{"title":"circles recursion & ordered noise","thumbnail":"/images/plots/203.jpg","description":"I like randomness a lot. Exploring the beauty of noise is also recreating Nature's pattern and trying to put back some order in that randomness.","tags":["shape-packing"]}},{"n":"199","key":"./199/README.md","rustFile":"199/main.rs","sourceURL":"https://github.com/gre/gre/blob/master/plots/examples/199/main.rs","content":"<p>This plot combines circle packing meets 2d sampling sorted by (x+y). Diamine &#39;Bloody Brexit&#39; on A4 watercolor paper.</p>\n<p>It took 2 hours to draw with a fountain pen that ran 111 meters of ink!</p>\n","data":{"title":"oblique doodle packing","thumbnail":"/images/plots/199.jpg","description":"This plot combines circle packing with sorted connected random lines technique. Diamine 'Bloody Brexit' on A4 watercolor paper.","tags":["shape-packing"]}},{"n":"190","key":"./190/README.md","rustFile":"190/main.rs","sourceURL":"https://github.com/gre/gre/blob/master/plots/examples/190/main.rs","content":"<p>Continuation on packing circles with layered lines.</p>\n","data":{"title":"Mountain moons","thumbnail":"/images/plots/190.jpg","description":"Continuation on packing circles with layered lines.","tags":["shape-packing"]}},{"n":"189","key":"./189/README.md","rustFile":"189/main.rs","sourceURL":"https://github.com/gre/gre/blob/master/plots/examples/189/main.rs","content":"<p>Packing circles with layered lines inside. exploration made before <a href=\"/plots/188\">plot#188</a>&#39;s plot loop.</p>\n<p>Also made a second one:</p>\n<img width=\"100%\" src=\"/images/plots/189bis.jpg\">\n\n<p>There is an infinity of variants.</p>\n","data":{"title":"Layers","thumbnail":"/images/plots/189.jpg","description":"Packing circles with layered lines inside. exploration made before plot#188.","tags":["shape-packing"]}},{"n":"188","key":"./188/README.md","rustFile":"188/main.rs","sourceURL":"https://github.com/gre/gre/blob/master/plots/examples/188/main.rs","content":"<p><strong>Every NFT sold allows acquiring a plotted frame. (code in the unlockable content)</strong></p>\n<p><nft-card contractAddress=\"0x495f947276749ce646f68ac8c248420045cb7b5e\" tokenId=\"47428341271170390733253974222101382154768714392453356712130950051307370577931\"> </nft-card> <script src=\"https://unpkg.com/embeddable-nfts/dist/nft-card.min.js\"></script></p>\n<p>@greweb&#39;s #10 plot loop. That animation is the main digital art.</p>\n<p>A high-quality video is available in 11 NFT editions, one per frame, for buyers to acquire each physical frame.</p>\n<p>This work took me a lot of dedication to plot the 11 frames for an (interrupted) one week long! Each frame taking almost 2 hours to plot, you can&#39;t really cheat here, I like to think the process to be some sort of <em>Proof Of Plot</em>.</p>\n<p>It is getting sold by <strong>achetezdelart</strong> on OpenSea. Detail is in the description.</p>\n<h2 id=\"plotting-highlights\">Plotting highlights</h2>\n<img width=\"100%\" src=\"/images/plots/188plot1.gif\">\n<img width=\"100%\" src=\"/images/plots/188plot2.gif\">\n<img width=\"100%\" src=\"/images/plots/188plot3.gif\">\n\n\n<h2 id=\"making-of-and-technical-notes\">Making-of and technical notes</h2>\n<p>It is probably one of the craziest main.rs source code I wrote for a plot, notably because I have combined in one script many different techniques, most of them explored earlier in other dedicated plots.</p>\n<p>I tried to put in this plot loop my best artwork and recent iterations of color packing experiments.</p>\n<p>The work is technically composed of 3 circles rotating in the middle of a lot of circles packing. Each circle contains itself a specific art technique:</p>\n<ul>\n<li>shape contouring, to remind a bit exploration of <a href=\"/plots/136\">plotloop#136</a></li>\n<li>square packing, which is a direct reuse of logic of <a href=\"/plots/180\">plot#180</a> with however a unique nesting of squares to create more depth.</li>\n<li>layered lines in circles, which is an innovation that I&#39;m going to re-explore (starting with next <a href=\"/plots/189\">plot#189</a>)</li>\n</ul>\n<h2 id=\"full-picture-photos\">Full picture photos</h2>\n<p>1 out of 11</p>\n<img width=\"100%\" src=\"/images/plots/188full0.jpg\">\n\n<p>2 out of 11</p>\n<img width=\"100%\" src=\"/images/plots/188full1.jpg\">\n\n<p>3 out of 11</p>\n<img width=\"100%\" src=\"/images/plots/188full2.jpg\">\n\n<p>4 out of 11</p>\n<img width=\"100%\" src=\"/images/plots/188full3.jpg\">\n\n<p>5 out of 11\n<img width=\"100%\" src=\"/images/plots/188full4.jpg\"></p>\n<p>6 out of 11\n<img width=\"100%\" src=\"/images/plots/188full5.jpg\"></p>\n<p>7 out of 11</p>\n<img width=\"100%\" src=\"/images/plots/188full6.jpg\">\n\n<p>8 out of 11</p>\n<img width=\"100%\" src=\"/images/plots/188full7.jpg\">\n\n<p>9 out of 11</p>\n<img width=\"100%\" src=\"/images/plots/188full8.jpg\">\n\n<p>10 out of 11</p>\n<img width=\"100%\" src=\"/images/plots/188full9.jpg\">\n\n<p>11 out of 11</p>\n<img width=\"100%\" src=\"/images/plots/188full10.jpg\">\n\n<h2 id=\"early-prototypes-i-had\">Early prototypes I had!</h2>\n<p>It was a hard choice to give up on colors and stay on a minimalistic black.</p>\n<p>I do not plan to sell these at this stage.</p>\n<img width=\"100%\" src=\"/images/plots/188proto1.jpg\">\n<img width=\"100%\" src=\"/images/plots/188proto2.jpg\">\n<img width=\"100%\" src=\"/images/plots/188proto3.jpg\">\n","data":{"title":"Rotation (11 frames)","thumbnail":"/images/plots/188.gif","description":"@greweb's #10 plot loop. That animation is the main digital art. A high-quality video is available in 11 NFT editions, one per frame, for buyers to acquire each physical frame.","tags":["shape-packing","plotloop"]}},{"n":"187","key":"./187/README.md","rustFile":"187/main.rs","sourceURL":"https://github.com/gre/gre/blob/master/plots/examples/187/main.rs","content":"<p>3-level recursion of packing circles</p>\n","data":{"title":"circles inside circles inside circles in a circle","thumbnail":"/images/plots/187.jpg","description":"3-level recursion of packing circles","tags":["shape-packing"]}},{"n":"186","key":"./186/README.md","rustFile":"186/main.rs","sourceURL":"https://github.com/gre/gre/blob/master/plots/examples/186/main.rs","content":"<p>Continuation of packing circle experiments.</p>\n","data":{"title":"Packing disc","thumbnail":"/images/plots/186.jpg","description":"Continuation of packing circle experiments.","tags":["shape-packing"]}},{"n":"185","key":"./185/README.md","rustFile":"185/main.rs","sourceURL":"https://github.com/gre/gre/blob/master/plots/examples/185/main.rs","content":"<p>Packing turquoise half-filled circles, plotted with a fountain pen and Diamine Turquoise ink on watercolor paper.</p>\n","data":{"title":"half-filled or half-empty?","thumbnail":"/images/plots/185.jpg","description":"Packing turquoise half-filled circles, plotted with a fountain pen and Diamine Turquoise ink on watercolor paper.","tags":["shape-packing"]}},{"n":"184","key":"./184/README.md","rustFile":"184/main.rs","sourceURL":"https://github.com/gre/gre/blob/master/plots/examples/184/main.rs","content":"<p>A total of 11307 hexagons are drawn with a fountain pen to fill 3963 hexagons. The shapes are themselves positioned in hexagons. It takes 2 hours to perform on the speed I chose for a watercolor 300g/m paper. The ink changes color due to the amount of ink flow (it flows less and less). The ink is &#39;Bloody Brexit&#39; and <strong>there is only this one ink used!</strong>.</p>\n<img src=\"/images/plots/184zoom.jpg\" width=\"100%\">\n\n<img src=\"/images/plots/bloodybrexit.jpg\" width=\"100%\">","data":{"title":"packing hexagons in hexagons","thumbnail":"/images/plots/184.jpg","description":"Packing 3963 filled hexagons in hexagons. 2 hours of plotting with fountain pens on watercolor 300g/m paper.","tags":["shape-packing"]}},{"n":"183","key":"./183/README.md","rustFile":"183/main.rs","sourceURL":"https://github.com/gre/gre/blob/master/plots/examples/183/main.rs","content":"<p>Packing many squares in circles. Black fountain pein on watercolor 300g/m paper.</p>\n","data":{"title":"packing squares in circles","thumbnail":"/images/plots/183.jpg","description":"Packing many squares in circles. Black fountain pein on watercolor 300g/m paper.","tags":["shape-packing"]}},{"n":"182","key":"./182/README.md","rustFile":"182/main.rs","sourceURL":"https://github.com/gre/gre/blob/master/plots/examples/182/main.rs","content":"<p>Continuing my geometry minimalism series. This time, packing squares in triangles. Black fountain pen on 300g/m paper.</p>\n","data":{"title":"packing squares in triangles","thumbnail":"/images/plots/182.jpg","description":"Continuing my geometry minimalism series. This time, packing squares in triangles. Black fountain pen on 300g/m paper.","tags":["shape-packing"]}},{"n":"181","key":"./181/README.md","rustFile":"181/main.rs","sourceURL":"https://github.com/gre/gre/blob/master/plots/examples/181/main.rs","content":"<p>Continuation of <a href=\"/plots/180\">plot#180</a>.</p>\n<p>Third iteration on packing iso triangles in a square. two fountain pens on 300g/m paper.</p>\n","data":{"title":"triangle packing","thumbnail":"/images/plots/181.jpg","description":"Third iteration on packing iso triangles in a square. two fountain pens on 300g/m paper.","tags":["shape-packing"]}},{"n":"180","key":"./180/README.md","rustFile":"180/main.rs","sourceURL":"https://github.com/gre/gre/blob/master/plots/examples/180/main.rs","content":"<p>Continuation of <a href=\"/plots/179\">plot#179</a>.</p>\n<p>Second iteration on packing rotated squares in a square. Black fountain pens on a 300g/m paper. It&#39;s interesting how the paper makes the ink having different shade of greys.</p>\n<p>This time, the rotations are less random and aligned on 10 possible angles. (but these are squares so not it repeats)</p>\n<p>There is also two concentric squares drawn each time.</p>\n<h2 id=\"technical-notes\">Technical notes</h2>\n<p>This is also a continuation of the code of <a href=\"/plots/179\">plot#179</a>.</p>\n<p>I did an improvement of the search algorithm using a dichotomic search:</p>\n<p><strong>search</strong></p>\n<pre><code class=\"language-rust\">fn poly_square_scaling_search(\n    boundaries: (f64, f64, f64, f64),\n    polys: &amp;Vec&lt;Polygon&lt;f64&gt;&gt;,\n    x: f64,\n    y: f64,\n    angle: f64,\n    min_scale: f64,\n    max_scale: f64,\n) -&gt; Option&lt;f64&gt; {\n    let overlaps = |size| {\n        let poly = rotated_square_as_polygon(x, y, size, angle);\n        let bounds = poly.bounding_rect().unwrap();\n        let topleft: Point&lt;f64&gt; = bounds.min().into();\n        let bottomright: Point&lt;f64&gt; = topleft + point!(\n            x: bounds.width(),\n            y: bounds.height()\n        );\n        out_of_boundaries(topleft.x_y(), boundaries)\n        || out_of_boundaries(bottomright.x_y(), boundaries)\n        || poly_collides_in_polys(polys, &amp;poly)\n    };\n\n    let mut from = min_scale;\n    let mut to = max_scale;\n    loop {\n        if overlaps(from) {\n            return None;\n        }\n        if to - from &lt; 0.1 {\n            return Some(from);\n        }\n        let middle = (to + from) / 2.0;\n        if overlaps(middle) {\n            to = middle;\n        }\n        else {\n            from = middle;\n        }\n    }\n}\n</code></pre>\n","data":{"title":"squares packing 002","thumbnail":"/images/plots/180.jpg","description":"Second iteration on packing rotated squares in a square. Black fountain pens on 300g/m paper.","tags":["shape-packing"]}},{"n":"179","key":"./179/README.md","rustFile":"179/main.rs","sourceURL":"https://github.com/gre/gre/blob/master/plots/examples/179/main.rs","content":"<p>Packing rotated squares in a square. Black fountain pens on Bristol. Interestingly one square didn&#39;t draw due to ink issues. It makes the final art pretty unique!</p>\n<h2 id=\"technical-notes\">Technical notes</h2>\n<p>The algorithm brute-forces with 1 million iterations to find square location, for each iteration it will then search for the biggest square that can fit in the location space. I didn&#39;t even implemented dichotomic search for finding the square scale (it&#39;s a simple loop) but the overall script runs relatively fast in Rustlang (less than 10 seconds).</p>\n<p><strong>main loop</strong></p>\n<pre><code class=\"language-rust\">let mut polys = Vec::new();\nlet mut rng = rng_from_seed(opts.seed);\nfor i in 0..1000000 {\n    let x: f64 = rng.gen_range(bounds.0, bounds.2);\n    let y: f64 = rng.gen_range(bounds.1, bounds.3);\n    let a: f64 = rng.gen_range(0.0, 8.0);\n    if let Some(size) = poly_square_scaling_search(bounds, &amp;polys, x, y, a, min_threshold) {\n        let poly = rotated_square_as_polygon(x, y, size - pad, a);\n        polys.push(poly);\n    }\n    if polys.len() &gt; desired_count {\n        break;\n    }\n}\n</code></pre>\n<p><strong>search</strong></p>\n<pre><code class=\"language-rust\">fn poly_square_scaling_search(\n    boundaries: (f64, f64, f64, f64),\n    polys: &amp;Vec&lt;Polygon&lt;f64&gt;&gt;,\n    x: f64,\n    y: f64,\n    angle: f64,\n    min_threshold: f64\n) -&gt; Option&lt;f64&gt; {\n    let mut size = 0.1;\n    let dsize = 0.1;\n    // TODO dichotomic search could help perf here...\n    loop {\n        let poly = rotated_square_as_polygon(x, y, size, angle);\n        let bounds = poly.bounding_rect().unwrap();\n        let topleft: Point&lt;f64&gt; = bounds.min().into();\n        let bottomright: Point&lt;f64&gt; = topleft + point!(\n            x: bounds.width(),\n            y: bounds.height()\n        );\n        if out_of_boundaries(topleft.x_y(), boundaries) || out_of_boundaries(bottomright.x_y(), boundaries) {\n            break;\n        }\n        if poly_collides_in_polys(polys, &amp;poly) {\n            break;\n        }\n        size += dsize;\n    }\n    if size &lt; min_threshold {\n        return None;\n    }\n    return Some(size);\n}\n</code></pre>\n","data":{"title":"squares packing 001","thumbnail":"/images/plots/179.jpg","description":"Packing rotated squares in a square. Black fountain pens on Bristol.","tags":["shape-packing"]}},{"n":"177","key":"./177/README.md","rustFile":"177/main.rs","sourceURL":"https://github.com/gre/gre/blob/master/plots/examples/177/main.rs","content":"<p>Spirals with 3 colors distributed with &#39;circle packing&#39; technique. 3 fountain pens on Bristol.</p>\n","data":{"title":"3-colors spiral packing","thumbnail":"/images/plots/177.jpg","description":"Spirals with 3 colors distributed with 'circle packing' technique. 3 fountain pens on Bristol.","tags":["circle-packing","shape-packing"]}},{"n":"176","key":"./176/README.md","rustFile":"176/main.rs","sourceURL":"https://github.com/gre/gre/blob/master/plots/examples/176/main.rs","content":"<p>My first plot experiment using &#39;circle packing&#39; technique. More ideas and explorations to come!</p>\n","data":{"title":"Blue Circle Packing","thumbnail":"/images/plots/176.jpg","description":"My first plot experiment using 'circle packing' technique. More ideas and explorations to come!","tags":["circle-packing","shape-packing"]}}]},"__N_SSG":true}
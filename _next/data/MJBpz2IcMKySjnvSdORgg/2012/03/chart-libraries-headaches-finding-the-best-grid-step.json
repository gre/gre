{"pageProps":{"id":"2012-03-06-chart-libraries-headaches-finding-the-best-grid-step","year":"2012","month":"03","day":"06","slug":"chart-libraries-headaches-finding-the-best-grid-step","content":"<h1 id=\"\"></h1>\n<img src=\"/images/2012/02/wrong-chart-scale.png\" class=\"thumbnail-left\" />\n\n<p>If you have ever made a chart library in your life, you’ve probably asked yourself how to find the best scale for the grid in order to have <strong>nice values to display in the axis</strong>.</p>\n<p>Most of the time, <strong>data ranges are unknown</strong>, hence we need to <strong>adapt the grid step</strong> to provide the best display.</p>\n<h2 id=\"check-this-out\">Check this out</h2>\n<iframe src=\"/demo/grid-utils/\" frameborder=\"0\" width=\"525\" height=\"140\"></iframe>\n\n<p>Let’s explain the algorithm…</p>\n<!--more-->\n\n<h2 id=\"about-scientific-notation\">About scientific notation</h2>\n<p>Any number can be formatted in scientific notation. It is written in the form of <strong>A x 10N</strong> and is noted <strong>AeN</strong>.</p>\n<p>For instance, 2300 becomes <strong>2.3e3</strong> (because 2300 = 2.3 x 103), 12 becomes <strong>1.2e1</strong>, and 0.23 becomes <strong>2.3e-1</strong>.</p>\n<p>Scientific notation is exactly made for <strong>displaying huge or tiny values in a few characters</strong>.<br>We can use the same principle for finding good values for the step scale, we can just <strong>keep the pow of 10</strong> part (<strong>N</strong>) and <strong>round the value part</strong> (<strong>A</strong>).</p>\n<h2 id=\"magic-numbers\">Magic numbers</h2>\n<p>But <strong>rounding is not enough</strong>, I have found that good pattern numbers of step range is those divisible by 2, 5 and 10.</p>\n<p>In math term, we need to find a step range <em>sr</em>, where</p>\n<pre><code>∀ n ∈ |N, ∀ a ∈ {1, 2, 5}, ∃ sr, sr = a x 10^n\n</code></pre>\n<p>This is basically because 2 x 5 = 10 : using a step of 5 we have a 10 modularity every 2 step, and, using a step of 2 we have a 10 modularity every 5 step.</p>\n<p>** 2 step:** 0 2 4 6 8 <strong>10</strong> 12 14 16 18 <strong>20</strong> …<br>** 5 step:** 0 5 <strong>10</strong> 15 <strong>20</strong> 25 <strong>30</strong> 35 <strong>40</strong> 45 …<br><strong>10 step:</strong> <strong>0 10 20 30 40 50 60 70 80 90</strong> …</p>\n<p>For any dataset, we need to fallback on the closest step range in all of possible step ranges: … 0.002, 0.02, 0.2, 2, 20, 200, …, … 0.005, 0.05, 0.5, 5, 50, 500, …, and … 0.001, 0.01, 0.1, 1, 10, 100, …,</p>\n<h3 id=\"calculate-the-pow-of-10\">Calculate the pow of 10</h3>\n<p>To get the <strong>N</strong> value of the <strong>A x 10N</strong> form, we can use the log of 10:</p>\n<pre><code class=\"language-javascript\">N = Math.log(number) / Math.log(10);\n</code></pre>\n<h3 id=\"calculate-the-value-modulo-10\">Calculate the value modulo 10</h3>\n<p>To get the <strong>A</strong> value of the <strong>A x 10N</strong> form, we can just divide the number by <strong>10N</strong>:</p>\n<pre><code class=\"language-javascript\">A = number / Math.pow(10, N);\n</code></pre>\n<h3 id=\"rounding-the-number\">‘Rounding’ the number</h3>\n<p>We know just need to change the value of <strong>A</strong> and make it more “readable”.<br>We can map the value as follow:</p>\n<pre><code>if A ∈ [0, 1.5[ then A becomes 1\nif A ∈ [1.5, 3.5[ then A becomes 2\nif A ∈ [3.5, 7.5[ then A becomes 5\nif A ∈ [7.5, 10[ then A becomes 10\n</code></pre>\n<p>Note that these rules may probably be improved, I would love if someone could improve this (because I use a arithmetic mean approach and it should probably be arithmetic).</p>\n<h2 id=\"implementation\">Implementation</h2>\n<h3 id=\"scala\">Scala</h3>\n<script src=\"https://gist.github.com/1987311.js?file=GridUtils.scala\"></script>\n\n<h3 id=\"javascript\">Javascript</h3>\n<script src=\"https://gist.github.com/1987311.js?file=GridUtils.js\"></script>\n\n<p><strong>Usage example:</strong></p>\n<pre><code class=\"language-javascript\">GridUtils.findNiceRoundStep(xMax, 10);\n</code></pre>\n<p>where <em>xMax</em> is the scale of the axis, and <em>10</em> is the desired number of graduation split.</p>\n<h2 id=\"conclusion\">Conclusion</h2>\n<p>Finding the best grid step is finally a simple thing to implement but is an essential feature every chart libraries should have.</p>\n","data":{"title":"Chart libraries headaches – finding the best grid step","description":"If you have ever made a chart library in your life, you’ve probably asked yourself how to find the best scale for the grid in order to have nice values to display in the axis.","thumbnail":"/images/2012/02/wrong-chart-scale.png","author":"Gaetan","layout":"post","permalink":"/2012/03/chart-libraries-headaches-finding-the-best-grid-step/","tags":["javascript","math"]}},"__N_SSG":true}
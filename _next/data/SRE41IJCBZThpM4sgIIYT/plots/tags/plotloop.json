{"pageProps":{"tag":"plotloop","plots":[{"n":"202","key":"./202/README.md","rustFile":"202/main.rs","content":"<p>@greweb&#39;s #12 plot loop. Taking the idea of <a href=\"/plots/198\">plot#198</a> to the next level using an animated eye.</p>\n<p>These are plotted (~ 2 hours each frame) with fountain pens and two inks (&#39;Bloody Brexit&#39; by Diamine and &#39;Writers Blood&#39; by Diamine) on a A4 watercolor paper (300g/m2).</p>\n<p>The eye is mirrored with a different offset to make this duality. The title refers to the French expression &quot;œil pour œil, dent pour dent&quot; which means &quot;an eye for an eye&quot;.</p>\n<h3 id=\"making-of\">Making of</h3>\n<p>I took a video of my wife eye and use this GIF as an input to my generator =)</p>\n<img src=\"/images/plots/202-input.gif\" width=\"400\">\n\n<p>The way to mix the two eyes is using a simple technique, using my own tool set:</p>\n<pre><code class=\"language-rust\">let get_color_1 = image_gif_get_color(&quot;images/eye.gif&quot;, opts.index).unwrap();\nlet get_color_2 = image_gif_get_color(&quot;images/eye.gif&quot;, opts.index + 2).unwrap();\nlet f = |(x, y): (f64, f64)| {\n    let p = (x, y);\n    let c1 = get_color_1((p.0, p.1 + 0.2));\n    let c2 = get_color_2((p.0, 1.2 - p.1));\n    smoothstep(0.0, 1.0, grayscale(c1)) *\n    smoothstep(0.0, 1.0, grayscale(c2))\n};\n</code></pre>\n","data":{"title":"œil pour œil (4 frames)","thumbnail":"/images/plots/202.gif","description":"@greweb's #12 plot loop","tags":["plotloop"]}},{"n":"195","key":"./195/README.md","rustFile":"195/main.rs","content":"<p>@greweb&#39;s #11 plot loop. This is an highlight of the recent work, animated.</p>\n","data":{"title":"Dancing mountain (4 frames)","thumbnail":"/images/plots/195.gif","description":"@greweb's #11 plot loop.","tags":["plotloop"]}},{"n":"188","key":"./188/README.md","rustFile":"188/main.rs","content":"<p><strong>Every NFT sold allows acquiring a plotted frame. (code in the unlockable content)</strong></p>\n<p><nft-card contractAddress=\"0x495f947276749ce646f68ac8c248420045cb7b5e\" tokenId=\"47428341271170390733253974222101382154768714392453356712130950051307370577931\"> </nft-card> <script src=\"https://unpkg.com/embeddable-nfts/dist/nft-card.min.js\"></script></p>\n<p>@greweb&#39;s #10 plot loop. That animation is the main digital art.</p>\n<p>A high-quality video is available in 11 NFT editions, one per frame, for buyers to acquire each physical frame.</p>\n<p>This work took me a lot of dedication to plot the 11 frames for an (interrupted) one week long! Each frame taking almost 2 hours to plot, you can&#39;t really cheat here, I like to think the process to be some sort of <em>Proof Of Plot</em>.</p>\n<p>It is getting sold by <strong>achetezdelart</strong> on OpenSea. Detail is in the description.</p>\n<h2 id=\"plotting-highlights\">Plotting highlights</h2>\n<img width=\"100%\" src=\"/images/plots/188plot1.gif\">\n<img width=\"100%\" src=\"/images/plots/188plot2.gif\">\n<img width=\"100%\" src=\"/images/plots/188plot3.gif\">\n\n\n<h2 id=\"making-of-and-technical-notes\">Making-of and technical notes</h2>\n<p>It is probably one of the craziest main.rs source code I wrote for a plot, notably because I have combined in one script many different techniques, most of them explored earlier in other dedicated plots.</p>\n<p>I tried to put in this plot loop my best artwork and recent iterations of color packing experiments.</p>\n<p>The work is technically composed of 3 circles rotating in the middle of a lot of circles packing. Each circle contains itself a specific art technique:</p>\n<ul>\n<li>shape contouring, to remind a bit exploration of <a href=\"/plots/136\">plotloop#136</a></li>\n<li>square packing, which is a direct reuse of logic of <a href=\"/plots/180\">plot#180</a> with however a unique nesting of squares to create more depth.</li>\n<li>layered lines in circles, which is an innovation that I&#39;m going to re-explore (starting with next <a href=\"/plots/189\">plot#189</a>)</li>\n</ul>\n<h2 id=\"full-picture-photos\">Full picture photos</h2>\n<p>1 out of 11</p>\n<img width=\"100%\" src=\"/images/plots/188full0.jpg\">\n\n<p>2 out of 11</p>\n<img width=\"100%\" src=\"/images/plots/188full1.jpg\">\n\n<p>3 out of 11</p>\n<img width=\"100%\" src=\"/images/plots/188full2.jpg\">\n\n<p>4 out of 11</p>\n<img width=\"100%\" src=\"/images/plots/188full3.jpg\">\n\n<p>5 out of 11\n<img width=\"100%\" src=\"/images/plots/188full4.jpg\"></p>\n<p>6 out of 11\n<img width=\"100%\" src=\"/images/plots/188full5.jpg\"></p>\n<p>7 out of 11</p>\n<img width=\"100%\" src=\"/images/plots/188full6.jpg\">\n\n<p>8 out of 11</p>\n<img width=\"100%\" src=\"/images/plots/188full7.jpg\">\n\n<p>9 out of 11</p>\n<img width=\"100%\" src=\"/images/plots/188full8.jpg\">\n\n<p>10 out of 11</p>\n<img width=\"100%\" src=\"/images/plots/188full9.jpg\">\n\n<p>11 out of 11</p>\n<img width=\"100%\" src=\"/images/plots/188full10.jpg\">\n\n<h2 id=\"early-prototypes-i-had\">Early prototypes I had!</h2>\n<p>It was a hard choice to give up on colors and stay on a minimalistic black.</p>\n<p>I do not plan to sell these at this stage.</p>\n<img width=\"100%\" src=\"/images/plots/188proto1.jpg\">\n<img width=\"100%\" src=\"/images/plots/188proto2.jpg\">\n<img width=\"100%\" src=\"/images/plots/188proto3.jpg\">\n","data":{"title":"Rotation (11 frames)","thumbnail":"/images/plots/188.gif","description":"@greweb's #10 plot loop. That animation is the main digital art. A high-quality video is available in 11 NFT editions, one per frame, for buyers to acquire each physical frame.","tags":["shape-packing","plotloop"]}},{"n":"178","key":"./178/README.md","rustFile":"178/main.rs","content":"<p>@greweb&#39;s #9 plot loop. The 1920p animation is the main digital art. NFT is available in 6 editions, one per frame. First buyer of each edition can collect related frame to acquire the physical art (selected by buy order. PM @greweb, ship anywhere in the world). Secondary market is digital only. plotted on Bristol paper with black fountain pen. See greweb.me/plots/178</p>\n<p>plotloop, physical, phygital, plot, loop, fountainpen</p>\n<p>Here is &quot;Shell&quot; my 9th <a href=\"https://greweb.me/2021/05/plot-loops\">&quot;plot loop&quot; (see article)</a>. The main digital art is a 1920p video loop of 6 frames available as a <a href=\"https://www.hicetnunc.xyz/objkt/154538\">Tezos hicetnunc NFT</a>. The physical art is 6 frames of A4 size, plotted with a black fountain pen on Bristol paper, and offered when <a href=\"https://www.hicetnunc.xyz/objkt/154538\">buying the NFT</a> (6 editions, assigned in buy order).</p>\n<img src=\"/images/plots/178zoom1.jpg\" width=\"100%\">\n\n<h3 id=\"making-of\">Making of</h3>\n<p>I&#39;ve rebooted one of my plot code (one from 100th&#39;s celebration) and animated it by rotating the center gravity. One of the usual challenge I had to face is the fact many strokes were placed at the same area and had risk to dig into the paper. I&#39;ve used my usual &#39;grid counter&#39; technique but this time pushed it to extreme in that it started making &quot;dots&quot; a bit like in the stippling technique. Dots are aligned to the grid that is used by the algorithm.</p>\n<img src=\"/images/plots/178plotting0.gif\" width=\"100%\">\n\n<p>I then met one of the biggest difficulty of my plot: the fact the paper will start waving a bit with the humidity of the ink. It creates two problem: imprecision and unplanned strokes (lines when the robot move it).</p>\n<p>I countered this problem by reversing my plot and starting from the center:</p>\n<img src=\"/images/plots/178plotting1.gif\" width=\"100%\">\n\n<p>Some of the plots have small remaining imperfection that I judged being part of the art.</p>\n","data":{"title":"Shell (6 frames)","thumbnail":"/images/plots/178.gif","tags":["plotloop"],"objkts":[154538]}},{"n":"171","key":"./171/README.md","rustFile":"171/main.rs","content":"<p>Here is &quot;Ring of faces&quot; my 8th <a href=\"https://greweb.me/2021/05/plot-loops\">&quot;plot loop&quot; (see article)</a>. The main digital art is a 1920p video loop of 8 frames available as a <a href=\"https://www.hicetnunc.xyz/objkt/144002\">Tezos hicetnunc NFT</a>. The physical art is 8 frames of A4 size, plotted with a black fountain pen on 300 g/m2 grain paper, and offered when <a href=\"https://www.hicetnunc.xyz/objkt/144002\">buying the NFT</a> (8 editions, assigned in buy order).</p>\n<img src=\"/images/plots/171zoom1.jpg\" width=\"100%\">\n\n<p>The name &#39;Ring of faces&#39; refers to generating different silhouettes of faces from pure noise. The work involved here is purely generative art (nothing draw manually). I had a selection phase where I chose this one among 100 results.</p>\n<p>I like these eight plots series because there are many unique faces here. You can even imagine faces in the inner area. That is purely a reflection of your own imagination.</p>\n<p>I also played a lot with this duality to put twice the art in inversed coloring filling mode as well as having a rotation. The animation between the two tiles is offset exactly by 50% while also allowing a good variety and similarity when you buy one specific frame.</p>\n<p>I used a high grain paper this time which works well with the cross-hatching filling method used, also thanks to a not too crowded area. I usually would avoid such paper for fountain pens that can &quot;bleed&quot; too much on it. It&#39;s time to do it more in the future!</p>\n<img src=\"/images/plots/171zoom2.jpg\" width=\"100%\">\n\n<p>The general animation is inspired by a shader I wrote <a href=\"https://greweb.me/shaderday/68\">https://greweb.me/shaderday/68</a></p>\n<img src=\"/images/plots/171all.jpg\" width=\"100%\">\n\n<p>The effect called &#39;Apophenia&#39; is, in this case, our ability to recognize a face silhouette in pure noise.</p>\n<p>I see these different silhouettes:</p>\n<ul>\n<li>an indigenous face</li>\n<li>Churchill</li>\n<li>a bearded man</li>\n<li>a woman</li>\n</ul>\n<p>Go figure why.</p>\n","data":{"title":"Ring of faces (8 frames)","thumbnail":"/images/plots/171.gif","description":"8 frames plotted making an animated loop. A 1920p video and A4 physical art is available as an NFT.","tags":["plotloop","apophenia"],"objkts":[144002]}},{"n":"164","key":"./164/README.md","rustFile":"164/main.rs","content":"<p><strong>Every NFT sold allows acquiring a plotted frame. (code in the unlockable content)</strong></p>\n<p><nft-card contractAddress=\"0x495f947276749ce646f68ac8c248420045cb7b5e\" tokenId=\"47428341271170390733253974222101382154768714392453356712130950043610789183496\"> </nft-card> <script src=\"https://unpkg.com/embeddable-nfts/dist/nft-card.min.js\"></script></p>\n<p><video loop autoplay controls src=\"/images/plots/164-showcase.mp4\" width=\"100%\"></video></p>\n<p>My 7th <a href=\"/plots/tags/plotloop\">plotloop</a> is a very special one, inspired from the mother of all of my plot loops: <a href=\"/plots/108\">plot#108</a> which wasn&#39;t planned to be animated but a way to visualize randomness and chose one frame! This is still what gave me the idea to do these plot loops.</p>\n<blockquote>\n<p>The concept of Plot Loop, as described in <a href=\"https://greweb.me/2021/05/plot-loops\">https://greweb.me/2021/05/plot-loops</a> article, is an hybrid concept between a digital video art and physical plot that produces topology of the same art.</p>\n</blockquote>\n<p>The main digital art is a 1920p video loop of 8 frames available as NFT on Opensea.io sold by <a href=\"https://twitter.com/achetezdelart\">@achetezdelart</a> famous Paris&#39; art gallery. I am so thrilled to work for the first time with an art gallery and looking forward to do more collaboration in the future! The physical art is the 8 frames, plotted with 3 fountain pens on Bristol A4 paper (250g), and offered when buying the NFT.</p>\n<h2 id=\"24-hours-of-near-non-stop-plotting\">24+ hours of near non-stop plotting!</h2>\n<p>Once the coding was done, the hard part was the precision work of plotting 8 frames, each taking 2 hours to achieve. With all the fail and retry there were, it took me more than a day to finish it all. The sun strokes takes about 10 minutes but the rest takes around 100 minutes.</p>\n<p><video loop autoplay controls src=\"/images/plots/164-plotting-speed-x200.mp4\" width=\"100%\"></video></p>\n<h2 id=\"zoom-photos\">Zoom photos</h2>\n<img src=\"/images/plots/164zoom.jpg\" width=\"100%\" />\n\n<h2 id=\"proof-of-plot-a-very-time-consuming-creation-process\">&quot;Proof of Plot&quot;, a very time-consuming creation process</h2>\n<p>The creation process of this plot loop was one of the most challenging one, among all of the other plots I have done so far. The fact each frame takes about 2 hours to plot with 2 manual actions (changing the fountain pens) makes any mistake very punishing! You can&#39;t faster the 2 hours much without risking the paper to suffer faced to the number of stroke of the fountain pen!</p>\n<h3 id=\"fail-and-retry\">Fail and retry</h3>\n<p>Yet, plotting is a fail and retry process, so I like to show you 2 failures first among 4 of my first prototype fails:</p>\n<p><img width=\"50%\" src=\"/images/plots/164-fail1.jpg\"><img width=\"50%\" src=\"/images/plots/164-fail2.jpg\"></p>\n<p>For anyone familiar with plot and fountain pens this is indeed one of the worse nightmare to deal with: too much stroke-crowded area is going to badly end up with literally digging through the paper.</p>\n<h3 id=\"quick-technique-to-solve-this-problem\">Quick technique to solve this problem</h3>\n<p>A very simple technique I call the &quot;passage counter&quot; technique. It&#39;s simply the use of a 2D Grid where each cell have a counter that you increment when a line goes through it, when it reaches 3 (or more) that&#39;s where you start raising the pen in these crowded area.</p>\n<img width=\"300px\" src=\"/images/plots/164-grid.png\">\n\n<p>It works great with the limitation that too much up and down of your pen is both time consuming but also can be hurting the paper too, there there is a tradeoff to find.</p>\n<h3 id=\"some-interesting-creative-coding-techniques-used\">Some interesting creative coding techniques used</h3>\n<h4 id=\"sun-rays-projection\">sun rays projection</h4>\n<p>For the sun rays, I&#39;ve used a simple radial projection that collides with the mountain lines.\nI had to make lines randomly starting at different places to avoid the effect to be too condensed at the beginning (problem of radial projection is your lines get more and more distanced). I wanted it to not be that &quot;random&quot; so i&#39;ve used a simple prime number formula: distance to center of sun is added of an extra <code>8. + ((i * 29) % 121) as f64</code> where <code>i</code> is the ray index.</p>\n<h4 id=\"sun-oscillation\">sun oscillation</h4>\n<p>I didn&#39;t wanted to make the sun motion too realistic but I wanted a visible motion that would fit with the mountains and project rays from different positions. It also had to be looping (which a sunset/sunrise wouldn&#39;t allow)</p>\n<p>Therefore, I went with a simple trigonometry formula:</p>\n<pre><code class=\"language-rust\">let sunp = (\n  w / 2. + 75. * (2. * PI * sunphase).cos(),\n  50. - 30. * (2. * PI * sunphase).sin().abs()\n);\n</code></pre>\n<h4 id=\"mountain-oscillation-and-noise-shape\">mountain oscillation and noise shape</h4>\n<p>The noise algorithm I used was much more accomplished than in <a href=\"/plots/108\">plot#108</a> even though that historical plot one is interesting too.</p>\n<p>I learned recently the power of &#39;domain warping&#39; on applied on noise and I applied it here, at least mainly on the 1D of the wave. It creates more &quot;local minima&quot; on the shape and creates a more interesting animation.</p>\n<p>It&#39;s important to also note that noise/perlin noise, is quite challenging to &quot;loop&quot; and the way I did this is interpolation between 3 states. I have simply done this:</p>\n<pre><code class=\"language-rust\">let n1 = perlin.get([ a, b, opts.seed + i as f64 * divergence + 200.2 ]);\nlet n2 = perlin.get([ a, b, opts.seed + i as f64 * divergence + 300.514 ]);\nlet n3 = perlin.get([ a, b, opts.seed + i as f64 * divergence + 400.31 ]);\nlet n = 0.8 * \n    (\n        n1 * (2. * PI * p).cos() +\n        n2 * (2. * PI * (p + 0.33)).cos() +\n        n3 * (2. * PI * (p + 0.66)).cos()\n    ) +\n    // global disp\n    0.2 * perlin.get([\n        freq * xp,\n        freq * y,\n        opts.seed\n    ]);\n</code></pre>\n<p>where <strong>a</strong> and <strong>b</strong> are noise themselves to apply the &quot;domain warping&quot; magic.</p>\n","data":{"title":"Montagne muable (8 frames)","thumbnail":"/images/plots/164.gif","description":"","tags":["plotloop","mountain","perlin"]}},{"n":"157","key":"./157/README.md","rustFile":"157/main.rs","content":"<!--\n@greweb's #6 plot loop. The 1920p animation is the main digital art. NFT is available in 8 editions, one per frame. First buyer of each edition can collect related frame to acquire the physical art (selected by buy order. PM @greweb, ship anywhere in the world). Secondary market is digital only. plotted on A4 Bristol paper with fountain pen. See greweb.me/plots/157\n-->\n\n<p>Here is &quot;Spring&quot;, my 6th <a href=\"/plots/tags/plotloop\"><strong>plot loop</strong></a> <a href=\"https://greweb.me/2021/05/plot-loops\">(see article)</a>. <strong>The main digital art is a 1920p video loop of 8 frames available as a <a href=\"https://www.hicetnunc.xyz/objkt/117072\">Tezos hicetnunc NFT</a></strong>. The physical art are the 8 frames, plotted with 2 fountain pens on Bristol A4 paper (250g), and offered when <a href=\"https://www.hicetnunc.xyz/objkt/117072\">buying the NFT</a>.</p>\n<p>There are 8 plots available for sale and there will be no other editions of these plot loop frames. They all have the same inital price and the physical piece is selected in order of buy as each frame is relatively similar!</p>\n<h3 id=\"closer-look\">Closer look</h3>\n<p>The ink &quot;Bloody Brexit&quot; from Diamine have particularity to have coppery color reflections.</p>\n<img src=\"/images/plots/157zoom1.jpg\" width=\"100%\">\n<img src=\"/images/plots/157zoom2.jpg\" width=\"100%\">\n<img src=\"/images/plots/157zoom3.jpg\" width=\"100%\">\n\n<h2 id=\"making-off\">Making off</h2>\n<p>Here is a video of the plot, accelerated 5x.</p>\n<iframe width=\"100%\" height=\"400\" src=\"https://www.youtube.com/embed/UBzsr0CcrSk\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\n<p>Before that result, I had many iterations and 3 prototypes where I adjusted many parameters each time:</p>\n<img src=\"/images/plots/157proto1.jpg\" width=\"100%\">\n<img src=\"/images/plots/157proto2.jpg\" width=\"100%\">\n<img src=\"/images/plots/157proto3.jpg\" width=\"100%\">\n\n<p>I also had this failure: (forgot to attach the paper!)</p>\n<img src=\"/images/plots/157fail.jpg\" width=\"100%\">\n","data":{"title":"Spring (8 frames)","thumbnail":"/images/plots/157.gif","description":"8 frames plotted making an animated loop. A 1920p video and A4 physical art is available as an NFT.","tags":["parametric","plotloop"],"objkts":[117072]}},{"n":"150","key":"./150/README.md","rustFile":"150/main.rs","content":"<!--\n@greweb's #5 plot loop. The 1920p animation is the main digital art. NFT is available in 8 editions, one per frame. First buyer of each edition can collect related frame to acquire the physical art (selected by buy order. PM @greweb, ship anywhere in the world). Secondary market is digital only. plotted on A4 Bristol paper with fountain pen. See greweb.me/plots/150\n-->\n\n<p>Here is &quot;Dancing Planet&quot;, my 5th <a href=\"/plots/tags/plotloop\"><strong>plot loop</strong></a> <a href=\"https://greweb.me/2021/05/plot-loops\">(see article)</a>. <strong>The main digital art is a 1920p video loop of 8 frames available as a <a href=\"https://www.hicetnunc.xyz/objkt/105425\">Tezos hicetnunc NFT</a></strong>. The physical art are the 8 frames, plotted with 2 fountain pens on Bristol A4 paper (250g), and offered when <a href=\"https://www.hicetnunc.xyz/objkt/105425\">buying the NFT</a>.</p>\n<p>There are 8 plots available for sale and there will be no other editions of these plot loop frames. They all have the same inital price and the physical piece is selected in order of buy as each frame is relatively similar!</p>\n<img src=\"/images/plots/150-plots.jpg\" width=\"100%\">\n\n<p>This is a reboot of <a href=\"/plots/148\">plot#148</a> but with a big rework of the noise technique using domain warping as well as combination with this famous &#39;rotating dancer&#39; GIF.</p>\n<p>It is plotted with two phases, a first pass without a lot of noise and a second pass with more noise divergence:</p>\n<img src=\"/images/plots/150-phases.gif\" width=\"100%\">\n\n<img src=\"/images/plots/150-zoom1.jpg\" width=\"100%\">\n<img src=\"/images/plots/150-zoom2.jpg\" width=\"100%\">\n<img src=\"/images/plots/150-zoom3.jpg\" width=\"100%\">\n\n<h2 id=\"early-prototype-in-pursuit-of-the-good-ink-and-paper\">Early prototype, in pursuit of the good ink and paper...</h2>\n<p>I started with this first prototype of the concept:</p>\n<img src=\"/images/plots/150-proto1.jpg\" width=\"100%\">\n\n<p>It allowed me to see what I could adjust, for instance: adding more noise, more lines and scaling a bit the dancer.</p>\n<p>I used ink &#39;Quink&#39; by Parker plotted with a fountain pen on a Canson Bristol 250g paper (A4 format).</p>\n<p>Here is another prototype I tried: it uses a mix of two colors (dragon red and turquoise). <strong>I ended up preferring minimalism: black on white. At the end I stayed on my first ink choice but I will revisit this idea.</strong></p>\n<p><img src=\"/images/plots/150-proto2.jpg\" width=\"57%\"><img src=\"/images/plots/150-proto2-zoom.jpg\" width=\"42.8%\"></p>\n<h2 id=\"process-to-find-the-final-plot\">Process to find the final plot</h2>\n<p>To search for the good parameters I&#39;ve used a generator script with bash for loops. It kinda looked like this:</p>\n<pre><code class=\"language-sh\">for a in 0.5 1 2 4; do\nfor b in 0.5 1 2 4; do\nfor c in 0.5 1 2 4; do\nfor d in 0.5 1 2 4; do\n  sh $P/gen.sh --a $a --b $b --c $c --d $d\n  cp ./results/out.gif out/${a}_${b}_${c}_${d}.gif\ndone\ndone\ndone\ndone\n</code></pre>\n<p>Then I kept refining my &quot;range&quot; by fail and retry. It is quite slow to generate them so it&#39;s a long process.</p>\n<p>When I was satisfied by the parameters, I then switch to a second selection: the selection of the seed! because my noise have seed and can generate very different kind of noises, I put it against my &quot;elector&quot; homemade tool as explained on <a href=\"/plots/143\">plot#143</a>.</p>\n<img src=\"/images/plots/150-selection.png\" width=\"100%\">\n\n<h2 id=\"some-highlight-of-the-rustlang-code\">Some highlight of the Rustlang code</h2>\n<p>There is nothing really &quot;new&quot; from my previous plots, especially all the parametric plot when I started this &quot;growing parametric&quot; exploration between <a href=\"/plots/114\">plot#114</a> and <a href=\"/plots/148\">plot#148</a>.</p>\n<p>What is new here however is the use of a GIF as an input. It&#39;s very easy to do: my script takes basically an loop percentage which I can transpose to looking up a frame in the rotating dancer loop. I can then use this function I&#39;ve just added to my utilities:</p>\n<pre><code class=\"language-rust\">use image::AnimationDecoder;\nuse image::RgbaImage;\nuse image::gif::GifDecoder;\nuse image::io::Reader as ImageReader;\n\npub fn image_gif_get_color(\n    path: &amp;str,\n    index: usize\n) -&gt; Result&lt;\n    impl Fn((f64, f64)) -&gt; (f64, f64, f64),\n    image::ImageError,\n&gt; {\n    let file_in = File::open(path)?;\n    let decoder = GifDecoder::new(file_in).unwrap();\n    let frames = decoder.into_frames();\n    let frames = frames.collect_frames()?;\n    let img = frames.get(index % frames.len()).unwrap();\n    let buffer = img.buffer();\n    return Ok(dynamic_image_get_color(buffer.clone()));\n}\n\npub fn dynamic_image_get_color(\n    img: RgbaImage\n) -&gt; impl Fn((f64, f64)) -&gt; (f64, f64, f64) {\n    let (width, height) = img.dimensions();\n    return move |(x, y): (f64, f64)| {\n        let xi = (x.max(0.0).min(1.0)\n            * ((width - 1) as f64)) as u32;\n        let yi = (y.max(0.0).min(1.0)\n            * ((height - 1) as f64))\n            as u32;\n        let pixel = img.get_pixel(xi, yi);\n        let r = (pixel[0] as f64) / 255.0;\n        let g = (pixel[1] as f64) / 255.0;\n        let b = (pixel[2] as f64) / 255.0;\n        return (r, g, b);\n    };\n}\n</code></pre>\n<p>Rust really shines in having great library, this is just the classical &quot;image&quot; package here.</p>\n<p>Apart from this, the Rust code (you can see main.rs link on top of this page) is pretty straightforward. There is just a lot of work in the parametric function which starts to be quite big:</p>\n<pre><code class=\"language-rust\">let parametric = |p: f64| {\n    let p1 = (splits * p).floor();\n    let p2 = splits * p - p1;\n    let t = (p1 + split_threshold * p2) / splits;\n    let mut t2 = (p1\n        + split_threshold * p2.powf(pow))\n        / splits;\n    let initial = 1. / spins;\n    t2 =\n        (t2 - initial).max(0.) / (1. - initial);\n    let scale = 1.0\n        - t2 * (1.0\n            - i as f64 * opts.size_diff / size);\n    let s = spins;\n    let mut p = (\n        scale\n            * amp1\n            * ((s * 2. * PI * t).sin()\n                + amp2\n                    * mix(\n                        (s * f1.1 * PI * t).sin(),\n                        (s * f2.1 * PI * t).sin(),\n                        t,\n                    )),\n        0.07\n        - scale\n            * amp1\n            * ((s * 2. * PI * t).cos()\n                + amp2\n                    * mix(\n                        (s * f1.0 * PI * t).cos(),\n                        (s * f2.0 * PI * t).cos(),\n                        t,\n                    )),\n    );\n    let noise_angle = p.1.atan2(p.0);\n    let noise_amp = 0.003 * perlin.get([\n            opts.a * (progress * PI).sin() +\n            4.8 * p.0 + perlin.get([\n                7.8 * p.0,\n                4.2 * p.1 + opts.b * (progress * PI).sin(),\n                40. + opts.seed\n            ]),\n            4.8 * p.1 + 0.8 * perlin.get([\n                4.5 * p.0 + opts.c * ((1. - progress) * PI).sin(),\n                6.8 * p.1 + perlin.get([\n                    20.5 * p.0 + opts.d * (2. * PI * progress).cos(),\n                    20.8 * p.1,\n                    200. + opts.seed,\n                ]),\n                20. + opts.seed,\n            ]),\n            100. + opts.seed + i as f64 * opts.seed_diff,\n        ]) +\n        0.03 * (1. - t) * perlin.get([\n            0.7 * p.0 + perlin.get([\n                2.9 * p.0 + opts.e * (2. * PI * progress).cos(),\n                1.7 * p.1,\n                2000.0\n            ]),\n            0.7 * p.1 + perlin.get([\n                3.1 * p.0,\n                2.5 * p.1 + opts.e * (2. * PI * progress).sin(),\n                2100.0\n            ]),\n            1000.,\n        ]);\n\n    p.0 += noise_amp * noise_angle.cos();\n    p.1 += noise_amp * noise_angle.sin();\n    p\n};\n</code></pre>\n","data":{"title":"Dancing Planet","thumbnail":"/images/plots/150.gif","description":"8 frames plotted making an animated loop. A 1920p video and A4 physical art is available as an NFT.","tags":["field","perlin","plotloop"],"objkts":[105425]}},{"n":"143","key":"./143/README.md","rustFile":"143/main.rs","content":"<p>Here is &quot;Rainbow Roots&quot;, my 4th <a href=\"https://greweb.me/2021/05/plot-loops\"><strong>plot loop</strong> (see article)</a>. <strong>The main digital art is a 1920p video loop of 8 frames available as a <a href=\"https://www.hicetnunc.xyz/objkt/98062\">Tezos hicetnunc NFT</a></strong>. The physical art are the 8 frames, plotted with 2 fountain pens on Bristol A4 paper (250g), and offered when <a href=\"https://www.hicetnunc.xyz/objkt/98062\">buying the NFT</a>.</p>\n<p>There are 8 plots available for sale and there will be no other editions of these plot loop frames. You can chose which frame you buy as the NFT editions are segmented into different prices. 20.1 tez for the first frame, 20.2 for the second and so on up to 20.8.</p>\n<img src=\"/images/plots/143-plots.jpg\" width=\"100%\">\n\n<p>This is a reboot of <a href=\"/plots/091\">plot#091</a> with more lines and better noise technique using domain warping.</p>\n<h3 id=\"coloring\">Coloring</h3>\n<p>Each plotted frame is made with 2 fountain pens, one primary and one secondary ink. The primary color is interleaved with the second with a ratio of 2/3 for primary and 1/3 for secondary.</p>\n<p>I used 8 different inks, all by &quot;Diamine&quot; brand: Turquoise, Aurora Borealis, Bloody Brexit, Imperial Purple, Writer&#39;s Blood, Red Dragon, Pumpkin, Sepia.</p>\n<img src=\"/images/plots/143-inks.jpg\" width=\"100%\">\n\n<p>I had a last minute changes after the photo was taken: I replaced Spring Green by another color because it would have been too &quot;light&quot; for a plot. I actually tried to do one with Sepia and it was also too &quot;light&quot;, I decided to go black! I definitely have betterplans for &#39;Spring Green&#39;.</p>\n<h3 id=\"paper\">Paper</h3>\n<p>I use a Canson Bristol 250g paper which works great with fountain pen. Format A4.</p>\n<p><img src=\"/images/plots/143-zoom1.jpg\" width=\"50%\"><img src=\"/images/plots/143-zoom2.jpg\" width=\"50%\"></p>\n<h2 id=\"creation-process\">Creation process</h2>\n<p>The creation process is made of many steps, which are entirely created by me and all these steps are fully published and open sourced.</p>\n<ul>\n<li>art generator: I write a Rustlang program that generate SVG files. (see <em>main.rs</em>)</li>\n<li>GIF preview: I use a script to make a digital and theorical video of the animation. Very important for me to have an idea of the animation (even tho only plotting time will have the final surprise).</li>\n<li>plot first prototypes: I do some prototype plots to make sure the plot is good, specifically that the density chosen (number of lines) is well adjusted (too much and your paper starts to be comprised, not enough and you have too much gaps).</li>\n<li>I polish a lot the generator. Specifically on the different noise harmonies, frequencies and amplitudes.</li>\n<li>Once it&#39;s ready, i&#39;ll run a super script that loops over the &quot;video preview&quot; generation. It&#39;s time consuming as I will often stop and polish again the generator. This time it took me probably ten times to iterate like this. Literally the whole day.</li>\n<li>When I&#39;m confident, I&#39;ll generate a lot of video previews. <strong>This time I have generated 500 GIFs.</strong> It was very tricky to decide and to actually elect the final plot, I developed my own tool (see section below)</li>\n<li>Finally, I can plot them all, it takes a lot of caution on manipulating paper and fountain pens and a lot of manual actions. It is very time consuming but very rewarding. <strong>Each frame took more than an hour to plot with an AxiDraw robot.</strong></li>\n</ul>\n<h3 id=\"preview\">Preview</h3>\n<p>This is what the theorical art was going to be, this is a digital preview before doing the plot so indeed it only simulate what the actual ink was going to do. The physical art is better looking with the imperfections of the medium.</p>\n<img src=\"/images/plots/143-theorical.gif\" width=\"100%\">\n\n<h3 id=\"process-to-find-the-final-plot\">Process to find the final plot</h3>\n<p>As I&#39;m working with a generator, it can generate infinite variants of plot loops. I have generated 500 GIFs (virtual plot loops)</p>\n<p>It ended up being very tedious to try to find a good animation by manually going through the files so I literally developped an app to solve my problem and provide a voting system so I can compare in parallel different results and chose among them. It could be reused and improved in future, it&#39;s not yet &quot;generic&quot; but if there is a need for it, I would make it generic and open source it as a standalone tool.</p>\n<img src=\"/images/plots/143-elector.jpg\" width=\"100%\">\n\n<h3 id=\"early-prototype-and-special-editions\">Early prototype and Special Editions</h3>\n<p>This prototype was done to adjust some plotting parameters, specifically the number of lines.</p>\n<img src=\"/images/plots/143-prototype.jpg\" width=\"100%\">\n\n<p>I&#39;ve also made these 2 special editions one to offer a friend and one gift to buyer of one of my previous plot loop. Each of them have very specific variations of parameters (they are written on the back of the plot and i don&#39;t keep them in memory, basically they are technically not easy to reproduce identically!)</p>\n<img src=\"/images/plots/143-special1.jpg\" width=\"100%\">\n<img src=\"/images/plots/143-special2.jpg\" width=\"100%\">\n","data":{"title":"Rainbow Roots","thumbnail":"/images/plots/143.gif","description":"8 frames plotted making an animated loop. A 1920p video and A4 physical art is available as an NFT.","tags":["field","perlin","plotloop"],"objkts":[98062]}},{"n":"136","key":"./136/README.md","rustFile":"136/main.rs","content":"<p>Here is &quot;White Protozoa&quot; my third <a href=\"https://greweb.me/2021/05/plot-loops\">&quot;plot loop&quot; (see article)</a>. The main digital art is a 1920p video loop of 8 frames available as a <a href=\"https://www.hicetnunc.xyz/objkt/82974\">Tezos hicetnunc NFT</a>. The physical art is 8 frames of A4 size, plotted with white Sakura gen pen on black card paper (210g), and offered when <a href=\"https://www.hicetnunc.xyz/objkt/71006\">buying the NFT</a> (8 editions, assigned in buy order).</p>\n<img width=\"100%\" src=\"/images/plots/136zoom.jpg\" />\n\n<p>like in <a href=\"/plots/135\">plot#135</a>, this is an exploration of domain warping and marching squares algorithms.</p>\n<img width=\"100%\" src=\"/images/plots/136full.jpg\" />\n\n<p>The ending of #1 being plotted, speed x5:</p>\n<img width=\"100%\" src=\"/images/plots/136plot.gif\" />\n\n<p>If you like bonus, I had considered many different animations, and they are viewable as GIF (digital black on white) on <a href=\"https://github.com/gre/gre/tree/master/plots/examples/136\">https://github.com/gre/gre/tree/master/plots/examples/136</a></p>\n<p>You can also find the full source code, open sourced as 99% of my work. I essentially have a generator of plot loops and I ran it to generate 500 gif and chose among them! It was very hard to decide!</p>\n<p>Enjoy!</p>\n","data":{"title":"White Protozoa (8 frames)","thumbnail":"/images/plots/136.gif","description":"8 frames plotted making an animated loop. A 1920p video and A4 physical art is available as an NFT.","tags":["plotloop"],"objkts":[82974]}},{"n":"129","key":"./129/README.md","rustFile":"129/main.rs","content":"<p>Here is &quot;Jumping blob&quot; my second <a href=\"https://greweb.me/2021/05/plot-loops\">&quot;plot loop&quot; (see article)</a>. The main digital art is a 1920p video loop of 8 frames available as a <a href=\"https://www.hicetnunc.xyz/objkt/71006\">Tezos hicetnunc NFT</a>. The physical art is 8 frames of A5 size, the square of the drawing is 12cm by 12cm and they are offered when <a href=\"https://www.hicetnunc.xyz/objkt/71006\">buying the NFT</a> (8 editions, assigned in buy order).</p>\n<p>There are 8 frames plotted recreating the &quot;jumping blob&quot; animation (shader implemented in <a href=\"https://greweb.me/shaderday/67\">https://greweb.me/shaderday/67</a>). Each frame is plotted with two fountain pens (Diamine inks: Pink and Turquoise) on Canson Bristal (A5 format), and takes about an hour to plot.</p>\n<img width=\"100%\" src=\"/images/plots/129_all.jpg\" />\n\n<p>Each frame revisit a specific technique that I explored in the past months:</p>\n<ul>\n<li>Frame 1: Voronoi distribution + samples spiral</li>\n<li>Frame 2: Voronoi distribution + samples sorted</li>\n<li>Frame 3: Voronoi polygons</li>\n<li>Frame 4: Voronoi distribtion + TSP</li>\n<li>Frame 5: sampling points and starting lines with vector field (low frequency)</li>\n<li>Frame 6: sampling points and starting lines with vector field (aligned horizontally)</li>\n<li>Frame 7: sampling points and starting lines with vector field (more curvy)</li>\n<li>Frame 8: circles plotting</li>\n</ul>\n<p><img width=\"50%\" src=\"/images/plots/129_zoom1.jpg\" /><img width=\"50%\" src=\"/images/plots/129_zoom2.jpg\" /></p>\n<p>The generator was completely reimplemented, including the &quot;scene&quot; itself which is a port of the GLSL code into Rustlang with some adjustments (two different colors are spread on different areas):</p>\n<pre><code class=\"language-rust\">fn jumping_blob(f: f64, o: (f64, f64)) -&gt; Vec&lt;f64&gt; {\n    let mut p = o;\n    let bezier = Bezier::new(0.0, 0.1, 1.0, 0.9);\n    let x = bezier.calculate(f as f32) as f64;\n    let t = x * 2. * PI;\n    let radius = 0.18;\n    let smoothing = 0.15;\n    let dist = 0.2;\n    p.0 -= 0.5;\n    p.1 -= 0.5;\n    p.1 *= -1.0;\n    p = p_r(p, PI / 2.0);\n    let q = p;\n    p = p_r(p, -t);\n    let s = f_op_difference_round(\n        f_op_union_round(\n            q.0.max(0.1 + q.0),\n            length((p.0 + dist, p.1)) - radius,\n            smoothing,\n        ),\n        length((p.0 - dist, p.1)) - radius,\n        smoothing,\n    );\n    let v = smoothstep(-0.6, 0.0, s).powf(2.0)\n        * (if s &lt; 0.0 { 1.0 } else { 0.0 });\n    vec![\n        v * (0.001 + smoothstep(-0.5, 1.5, p.0)),\n        v * (0.001 + smoothstep(1.5, -0.5, p.0)),\n    ]\n}\nfn p_r(p: (f64, f64), a: f64) -&gt; (f64, f64) {\n    (\n        a.cos() * p.0 + a.sin() * p.1,\n        a.cos() * p.1 - a.sin() * p.0,\n    )\n}\nfn length(l: (f64, f64)) -&gt; f64 {\n    (l.0 * l.0 + l.1 * l.1).sqrt()\n}\nfn f_op_union_round(a: f64, b: f64, r: f64) -&gt; f64 {\n    r.max(a.min(b))\n        - length(((r - a).max(0.), (r - b).max(0.)))\n}\nfn f_op_intersection_round(a: f64, b: f64, r: f64) -&gt; f64 {\n    (-r).min(a.max(b))\n        + length(((r + a).max(0.), (r + b).max(0.)))\n}\nfn f_op_difference_round(a: f64, b: f64, r: f64) -&gt; f64 {\n    f_op_intersection_round(a, -b, r)\n}\n</code></pre>\n<img width=\"100%\" src=\"/images/plots/129_zoom3.jpg\" />\n\n<p>It&#39;s one of the first time I try to work on the &quot;scene composition&quot; and I&#39;ve also used a pattern filled with &quot;+&quot; for the background. I want to explore more of these in the future.</p>\n<!--\nJumping Blob (8 frames)\n@greweb's #2 plot loop. The 1920p animation is the main & digital art. First buyer also can collect one frame of the physical art (PM @greweb, ship anywhere in the world, frame # in buy order). Secondary market is digital only. There are 8 frames, one for each NFT edition. drawing is 12cm square, centered on a A5 bristol paper, two fountain pens. See greweb.me/plots/129\nanimated, plot, plotloop, physical, phygical\n-->\n","data":{"title":"Jumping blob (8 frames)","thumbnail":"/images/plots/129.gif","description":"8 frames plotted making an animated loop of a jumping blob. A 1920p video and 12cm square physical art is available as an NFT.","tags":["plotloop"],"objkts":[71006]}},{"n":"121","key":"./121/README.md","rustFile":"121/main.rs","content":"<p><a href=\"/2021/05/plot-loops\"><strong>✍️ See also: Plot loops</strong> article</a>.</p>\n<p>This first plot loop is called &quot;Triplanet&quot;. It&#39;s a transition of two parametric functions with many perlin noise displacements. This is a continuation of <a href=\"/plots/100\">&quot;Planet Holes&quot;</a> series as well as recent <a href=\"/plots/111\">&quot;Parametric stack&quot;</a> explorations.\nEvery frame is generated with a Rust script I wrote.</p>\n<p>16 frames has been plotted with fountain pen on bristol paper (ink: Red Dragon by Diamine). With a back and forth effect, this produces a 30 frames animation loop.</p>\n<img width=\"100%\" src=\"/images/plots/121_walled.jpg\"/>\n\n<p><strong>The animation is released as a NFT video</strong> on <a href=\"https://www.hicetnunc.xyz/\">hicetnunc</a>. There are 16 editions, as many as there were frames plotted. The NFT video is an art in itself.</p>\n<p>By buying a frame (by order of buy), the first buyer also chose what happens to the physical plot: either I keep it OR you can claim it (contact me on Twitter) and have me sending it anywhere in the world!</p>\n<img width=\"100%\" src=\"/images/plots/121_zoom.jpg\"/>\n\n<p><strong>Plotting with fountain pen is challenging</strong> as it requires many search on the ink, paper and many fail and retry. Plotting all these frames took an afternoon.</p>\n<img width=\"100%\" src=\"/images/plots/121_plot.jpg\"/>\n\n<!--\n@greweb's #1 plot loop. 16 physical plots, fountain pen on A4 Bristol paper, one NFT edition for each plot frame. The 1920p video animation is the digital art that can be collected as-is. First buyer also chose what happens to the frame: can claim the physical art (PM @greweb, ship anywhere in world). See greweb.me/plots/121\ntags: animated, plot, plotloop, physical\n-->\n","data":{"title":"Triplanet (16 frames)","description":"Triplanet is my first plot loop, physical animation of 16 plotted frames. transition between parametric functions and perlin noise.","thumbnail":"/images/plots/121.gif","tags":["plotloop","parametric","perlin"],"objkts":[57902]}}]},"__N_SSG":true}
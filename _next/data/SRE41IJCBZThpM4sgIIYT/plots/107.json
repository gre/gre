{"pageProps":{"n":"107","plot":{"n":"107","key":"./107/README.md","rustFile":"107/main.rs","content":"","data":{"thumbnail":"/images/plots/107.jpg","tweet":"https://twitter.com/greweb/status/1383309202823680006","tags":["lines"]}},"prev":{"n":"106","key":"./106/README.md","rustFile":"106/main.rs","content":"","data":{"tweet":"https://twitter.com/greweb/status/1382954321214590980","tags":["lines"]}},"next":{"n":"108","key":"./108/README.md","rustFile":"108/main.rs","content":"<img width=\"100%\" src=\"/images/plots/108.gif\" />\n\n<p>It took me 107 previous days of plotting to come up with an elegant idea: searching the best plot among many different variants can easily be done by working instead on a video of that plot! Then you can chose a frame to plot, it is both practical as well as you get a nice animation for free!</p>\n<p>Some code snippet for video generation.</p>\n<pre><code class=\"language-bash\"># generate all .svg in results, then:\ncd results\nmkdir pngs\nfor f in *.svg; do convert $f pngs/${f%.*}.png; done\nffmpeg -r 24 -i pngs/%d.png -pix_fmt yuv420p -vf &quot;pad=ceil(iw/2)*2:ceil(ih/2)*2&quot; out.mp4\n</code></pre>\n","data":{"title":"Perlin mountains","thumbnail":"/images/plots/108.jpg","objkts":[36604],"plotterfiles":["https://plotterfiles.com/profile/files/5e43a751-6fef-4abc-a92d-253fe5c890c8"],"tags":["perlin","mountains"]}}},"__N_SSG":true}
{"pageProps":{"id":"2012-11-12-play-framework-enumerator-outputstream","year":"2012","month":"11","day":"12","slug":"play-framework-enumerator-outputstream","content":"<p>A few weeks ago, <a href=\"https://github.com/playframework/Play20/commit/0f1ec1479e490f2c8af4cd79dd0b6a14b0ea9f75\">we’ve introduced</a> a new feature in <a href=\"http://www.playframework.org/\">Play Framework</a>: the <code>Enumerator.outputStream</code> method, allowing you to work with Java API requiring an <code>OutputStream</code> to generate content, for instance the <code>java.util.zip</code> API.</p>\n<p><strong>Now, let’s see how easy it is to serve a big Zip generated on-the-fly without memory load with Play Framework.</strong></p>\n<!--more-->\n\n<h2 id=\"the-zip-generation-example\">The Zip generation example</h2>\n<script src=\"https://gist.github.com/4058734.js?file=Application.scala\"></script>\n\n<p>This demo shows how to <strong>generate a zip file on-the-fly</strong> and directly <strong>stream it</strong> to an HTTP client <strong>without loading it in memory or storing it in a file</strong>.</p>\n<p>It uses an <code>Enumerator</code> created with the <code>Enumerator.outputStream</code> method.<br>The <code>OutputStream</code> provided by the method is then plugged to the Java’s <code>ZipOutputStream</code>.</p>\n<p>For the example, we have generated a zip containing 100 text files, and each text files contains 100’000 random long numbers (yes, 100’000 !).</p>\n<p>The zip size is approximatively 100 Mb. (and is generated in about 3Mb/s in my machine in localhost, but this can be improved)</p>\n<p>The huge benefit of this is the download starts instantly, it means the Zip is streamed while it is generated.</p>\n<h2 id=\"show-me-the-code\">Show me the code!</h2>\n<p>Internally, it is implemented with a <code>Concurrent.unicast</code>, and a simple implementation of an <code>OutputStream</code> pushing into the unicast’s channel:</p>\n<script src=\"https://gist.github.com/4058734.js?file=Enumerator.scala\"></script>\n\n<h2 id=\"about-iteratee-and-enumerator\">About Iteratee and Enumerator</h2>\n<p>If you want to learn more about Iteratee concepts in Play Framework, I recommend you <a href=\"http://mandubian.com/2012/08/27/understanding-play2-iteratees-for-normal-humans/\">this article</a>.</p>\n","data":{"title":"Play Framework – Enumerator.outputStream","description":"A few weeks ago, we’ve introduced a new feature in Play Framework: the Enumerator.outputStream method, allowing you to work with Java API requiring an OutputStream to generate content, for instance the java.util.zip API.","author":"Gaetan","layout":"post","permalink":"/2012/11/play-framework-enumerator-outputstream/","tags":["playframework","iteratee"]}},"__N_SSG":true}
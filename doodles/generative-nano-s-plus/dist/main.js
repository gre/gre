!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var n=t();for(var o in n)("object"==typeof exports?exports:e)[o]=n[o]}}(globalThis,(function(){return(()=>{"use strict";var e={d:(t,n)=>{for(var o in n)e.o(n,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:n[o]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};function n(e,t,n){return e*(1-n)+n*t}async function o(e,t,o,r,a,i,c,l,s,u){const d=function(e,t,n){const o=t(128,64),r=o.getContext("2d");return r.fillStyle="#fff",r.fillRect(0,0,128,64),r.textAlign="center",r.textBaseline="middle",r.font=("undefined"==typeof navigator||navigator.userAgent.includes("Mac OS")?"":"bold ")+"22px Arial",r.fillStyle="#000",n(r)(e,64,32),o}(t.word,a,i),p=await async function(e,t,o,r){const a=1200,i=400,c=o(a,i),l=c.getContext("2d"),s=r(l);l.fillStyle="#000",l.fillRect(0,0,a,i),l.fillStyle="#fff";let u="Arial";if(t){l.strokeStyle="#fff",l.lineWidth=3;const e=Math.floor(3+6*t[4]),o=function(e,t,o){var r,a=(o=o||{}).octaveCount||4,i=o.amplitude||.1,c=o.persistence||.2,l=function(e,t){for(var n=new Array(e*t),o=0;o<n.length;++o)n[o]=Math.random();return n}(e,t),s=new Array(a);for(r=0;r<a;++r)s[r]=m(r);var u=new Array(e*t),d=0;for(r=a-1;r>=0;--r){d+=i*=c;for(var p=0;p<u.length;++p)u[p]=u[p]||0,u[p]+=s[r][p]*i}for(r=0;r<u.length;++r)u[r]/=d;return u;function m(o){for(var r=new Array(e*t),a=Math.pow(2,o),i=1/a,c=0,s=0;s<t;++s)for(var u=Math.floor(s/a)*a,d=(u+a)%t,p=(s-u)*i,m=0;m<e;++m){var f=Math.floor(m/a)*a,h=(f+a)%e,g=(m-f)*i,x=n(l[u*e+f],l[d*e+f],p),v=n(l[u*e+h],l[d*e+h],p);r[c]=n(x,v,g),c+=1}return r}}(a,i,{octaveCount:e,amplitude:t[3],persistence:.2});let r=[50,20],c=120*(d=t[0],p=t[1],d*(1-(m=t[2]))+p*m),s=Math.floor(3+50*t[1]);(s<15||e<4&&c>40)&&(l.fillStyle="#000",u="Arial Black");let f=Array(a).fill(i);for(let e=i-r[1];e>r[1]+c;e-=s){l.beginPath();let t=!0;for(let n=r[0];n<a-r[0];n++){let r=e-c*o[e*a+n];r>f[n]?t=!0:(f[n]=r,t?(l.moveTo(n,r),t=!1):l.lineTo(n,r))}l.stroke()}}var d,p,m;if(e){l.textAlign="center",l.textBaseline="middle";const t=e.split("\n"),n=Math.floor(20+1200/(3+Math.max(...t.map((e=>e.length)))));l.font=n+"px "+u,await Promise.all(t.map(((e,o)=>s(e,600,Math.round(200+1.2*n*(o+.5-t.length/2))))))}return c}(t.sentence,t.swivelPlotted,a,i),m=await async function(e,t,n){const o=t(600,600),r=o.getContext("2d"),a=n(r);return e&&(r.textAlign="center",r.textBaseline="middle",r.font="380px Arial",r.fillStyle="#fff",await a(e,300,320)),o}(t.sticker,a,i),f=t.bgColor,h=`\n  precision highp float;\n  varying vec2 uv;\n  uniform sampler2D text, metalText, stickerText;\n\n  uniform vec2 resolution;\n  uniform float time;\n\nconst vec3 Purple = vec3(0.765, 0.478, 0.99);\nconst vec3 Orange = vec3(0.988, 0.31, 0.0196);\nconst vec3 Black = vec3(0.1);\nconst vec3 White = vec3(0.9);\nconst vec3 Gold = vec3(1.0, 0.73, 0.2);\n\nvec3 sceneBgColor;\n\n#define PI ${Math.PI}\n#define HIT vec2\nHIT map (vec3 p);\nvec3 shade (HIT m, vec3 p);\nvec3 lighting (HIT hit, vec3 p, vec3 n, vec3 dir);\nfloat specularStrength (float m, vec3 n, vec3 p);\n\nfloat powof3 (float t) {\n  return t * t * t;\n}\n\nfloat cubicInOut(float t) {\n  return t < 0.5\n    ? 4.0 * t * t * t\n    : 0.5 * powof3(2.0 * t - 2.0) + 1.0;\n}\n\nfloat hash(float p) {\n  p = fract(p * .1031);\n  p *= p + 33.33;\n  p *= p + p;\n  return fract(p);\n}\nfloat hash(vec2 p) {\n  vec3 p3  = fract(vec3(p.xyx) * .1031);\n  p3 += dot(p3, p3.yzx + 33.33);\n  return fract((p3.x + p3.y) * p3.z);\n}\nfloat noise(float x) {\n  float i = floor(x);\n  float f = fract(x);\n  float u = f * f * (3.0 - 2.0 * f);\n  return mix(hash(i), hash(i + 1.0), u);\n}\nfloat noise(vec2 x) {\n  vec2 i = floor(x);\n  vec2 f = fract(x);\n  float a = hash(i);\n  float b = hash(i + vec2(1.0, 0.0));\n  float c = hash(i + vec2(0.0, 1.0));\n  float d = hash(i + vec2(1.0, 1.0));\n  vec2 u = f * f * (3.0 - 2.0 * f);\n  return mix(a, b, u.x) + (c - a) * u.y * (1.0 - u.x) + (d - b) * u.x * u.y;\n}\nconst mat2 m2 = mat2( 0.4,  0.7, -0.7,  0.4 );\nfloat fbm( in vec2 x ) {\n  float f = 2.0;\n  float s = 0.55;\n  float a = 0.0;\n  float b = 0.5;\n  for( int i=0; i<4; i++ ) {\n\tfloat n = noise(x);\n\ta += b * n;\n\tb *= s;\n\tx = f * x;\n  }\n  return a;\n}\nfloat fbm9( in vec2 x ) {\n  float f = 2.0;\n  float s = 0.55;\n  float a = 0.0;\n  float b = 0.5;\n  for( int i=0; i<9; i++ ) {\n\tfloat n = noise(x);\n\ta += b * n;\n\tb *= s;\n\tx = f * x;\n  }\n  return a;\n}\n\nfloat fOpUnionRound(float a, float b, float r) {\n\tvec2 u = max(vec2(r - a,r - b), vec2(0));\n\treturn max(r, min (a, b)) - length(u);\n}\nfloat fOpIntersectionRound(float a, float b, float r) {\n\tvec2 u = max(vec2(r + a,r + b), vec2(0));\n\treturn min(-r, max (a, b)) + length(u);\n}\nfloat fOpDifferenceRound (float a, float b, float r) {\n\treturn fOpIntersectionRound(a, -b, r);\n}\n\nfloat opSmoothSubtraction( float d1, float d2, float k ) {\n  float h = clamp( 0.5 - 0.5*(d2+d1)/k, 0.0, 1.0 );\n  return mix( d2, -d1, h ) + k*h*(1.0-h);\n}\n\nfloat sdCylinder( vec3 p, vec3 c ) {\n  return length(p.xz-c.xy)-c.z;\n}\nfloat sdCappedCylinder( vec3 p, float h, float r )\n{\n  vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(h,r);\n  return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n}\nfloat sdSegment (in vec3 p, in float L, in float R) {\n  p.y -= min(L, max(0.0, p.y));\n  return length(p) - R;\n}\n\nfloat sdBox( vec3 p, vec3 b ) {\n  vec3 q = abs(p) - b;\n  return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n}\nfloat sdBox2(in vec2 p, in vec2 b) {\n  vec2 d = abs(p) - b;\n  return length(max(d, vec2(0))) + min(max(d.x, d.y), 0.0);\n}\nfloat sdBoxRoundZ(vec3 p, vec3 b, float r) {\n  return max(sdBox2(p.xy, b.xy-r)-r, abs(p.z)-b.z);\n}\nvoid pR(inout vec2 p, float a) {\n\tp = cos(a)*p + sin(a)*vec2(p.y, -p.x);\n}\n\n${t.screenAnimation?`\nfloat shape (vec2 p, float t) {\n  float smoothing = 0.15;\n  p -= 0.5;\n  vec2 q = p;\n  pR(p, t + cos(${Math.round(5*t.screenAnimation[0]-2)}. * t));\n  vec2 dist = vec2(0.0);\n  float crop = 99.0;\n  float s = 99.0;;\n  s = fOpUnionRound(q.y, s, smoothing);\n\ndist = vec2(0.31, 0.0);\nfloat radius = 0.11;\ns = fOpUnionRound(s, length(p + dist) - radius, smoothing);\ncrop = fOpUnionRound(crop, length(p - dist) - radius, smoothing);\n\n  s = fOpDifferenceRound(s, crop, smoothing);\n  return smoothstep(0.0, 1.0 / min(resolution.x, resolution.y), s);\n}\n`:""}\n\nmat3 lookAt (vec3 ro, vec3 ta) {\n  float cr = 0.;\n  vec3 ww = normalize( ta - ro );\n  vec3 uu = normalize( cross(ww,vec3(sin(cr),cos(cr),0.0) ) );\n  vec3 vv =          ( cross(uu,ww));\n  return mat3(uu,vv,ww);\n}\nvec3 normal (in vec3 p) {\n\tvec3 eps = vec3(0.0005, 0.0, 0.0);\n\treturn normalize(vec3(\n\t\tmap(p+eps.xyy).x-map(p-eps.xyy).x,\n\t\tmap(p+eps.yxy).x-map(p-eps.yxy).x,\n\t\tmap(p+eps.yyx).x-map(p-eps.yyx).x\n\t));\n}\nfloat diffuse(vec3 p, vec3 n, vec3 lpos) {\n  vec3 l = normalize(lpos-p);\n  float dif = clamp(dot(n, l), 0.01, 1.);\n  return dif;\n}\n// https://www.iquilezles.org/www/articles/rmshadows/rmshadows.htm\nfloat softshadow( in vec3 ro, in vec3 rd, float mint, float maxt, float k ) {\n  float res = 1.0;\n  float ph = 1e20;\n  float t = mint;\n  for (int i=0; i<20; i++) {\n    float h =  map(ro + rd*t).x;\n    if (t>=maxt) break;\n    if( h<0.001) return 0.0;\n    float y = h*h/(2.0*ph);\n    float d = sqrt(h*h-y*y);\n    res = min( res, k*d/max(0.0,t-y) );\n    ph = h;\n    t += h;\n  }\n  return res;\n}\nHIT marcher (inout vec3 p, vec3 dir) {\n  HIT hit = HIT(0.);\n  float t = 0.;\n  for (int i=0; i<120; i++) {\n    HIT h = map(p + t * dir);\n    t += h.x;\n    if (abs(h.x) < .0001) {\n      hit = h;\n      break;\n    }\n  }\n  p += t * dir; \n  return hit;\n}\nHIT opU (HIT a, HIT b) {\n  if (a.x < b.x) return a;\n  return b;\n}\nfloat specular (vec3 n, vec3 pos, float m, vec3 ldir, vec3 dir, float p) {\n  return specularStrength(m, n, pos) * pow(max(dot(dir, reflect(ldir, n)), 0.0), p);\n}\nfloat grayscale (vec3 c) {\n  return 0.299 * c.r + 0.587 * c.g + 0.114 * c.b;\n}\n\nvec3 lighting (HIT hit, vec3 p, vec3 n, vec3 dir) {\n  vec3 l, ldir;\n  vec3 c = vec3(0.);\n  l = vec3(${t.lightPos.toFixed(1)}, 1.5, -3.4);\n  vec3 obj = shade(hit, p);\n  ldir = normalize(l - p);\n  c +=\n  0.92 * vec3(0.9, 0.7, 0.6) * (\n    // ambient\n    0.1\n    // diffuse\n    + obj\n      * (.5 + .5 * diffuse(p, n, l)) // half lambert\n      * (0.5 + 0.5 * softshadow(p, ldir, 0.05, 5., 8.))\n    + specular(n, p, hit.y, ldir, dir, 10.)\n  );\n  l = vec3(${(-t.lightPos).toFixed(1)}, 5., -2.);\n  ldir = normalize(l - p);\n  c +=\n  0.92 * vec3(0.3, 0.5, 0.6) * (\n  // ambient\n  0.1\n  // diffuse\n  + obj\n    * (.5 + .5 * diffuse(p, n, l)) // half lambert\n  + specular(n, p, hit.y, ldir, dir, 20.)\n  );\n\n  l = vec3(0., 2., 8.);\n  ldir = normalize(l - p);\n  c += ${"White"===f||"Black"===f?t.bgOrangeNoise?"Orange*":"0.3*":"0.8*"}${f} * (\n  + obj\n    * diffuse(p, n, l)\n  + specular(n, p, hit.y, ldir, dir, 20.)\n  );\n  return c;\n}\nfloat noiseMetal;\nfloat specularStrength (float m, vec3 n, vec3 p) {\n  if (m < 2.1) {\n  \tfloat v =\n  \t  n.z * fbm(600. * p.xy) +\n  \t  n.x * fbm(600. * p.yz) +\n  \t  n.y * fbm(600. * p.xz);\n  \treturn 0.4 + 0.3 * v;\n  }\n  if (m < 2.2) {\n    return 2.0;\n  }\n  if (m < 4.) {\n    return 0.6 - 0.5 * noiseMetal + 1. * ceil(m-2.21);\n  }\n  return 0.4;\n}\n\nvec3 sceneBg(vec2 p) {\n  vec2 motion = vec2(\n    cos(2. * PI * time),\n    sin(2. * PI * time));\n  vec2 c = p - 0.5;\n  float r = length(c);\n  float n = fbm9(\n    ${t.bgRadial.toFixed(2)} * r +\n    0.5 * p +\n    ${t.bgNoiseSeed.toFixed(2)} +\n    0.5 * fbm9(\n      -${t.bgNoiseSeed.toFixed(2)} +\n      p * 3.0 +\n      ${t.bgNoiseMotion.toFixed(2)} * motion +\n      ${t.bgNoiseFreq.toFixed(2)} * vec2(\n        fbm9(vec2(3.7, 7.7) + p * 20.0),\n        fbm9(p * 30.0 - vec2(7.7, 3.3) + ${t.bgNoiseSeed.toFixed(2)})\n      )\n    )\n  );\n  ${t.bgOrangeNoise?`return mix(${f}, Orange, smoothstep(-0.0001,${t.bgNoise.toFixed(2)},n-0.5));`:`return ${f} + ${t.bgNoise.toFixed(2)} * (n - 0.5);`}\n}\n\nvec3 sticker_color;\n\nvec3 shade (HIT hit, vec3 p) {\n  if (hit.y < 2.0) return sceneBgColor;\n  if (hit.y < 4.0) {\n    if (hit.y < 2.1) {\n    \treturn ${t.colorName};\n    }\n    if (hit.y < 2.2) {\n      vec2 coord = fract(fract(vec2(-0.2, 0.5) + vec2(3.6) * p.xy / vec2(-2.25, 1.0)) + ${t.scrollingScreen?"vec2(0.5+floor(time*15.0)/15.0, 0.)":"0.0"});\n      ${l?"coord.y = 1.0 - coord.y;":""}\n      vec2 a = coord * vec2(128.,64.);\n      float edge = min(fract(a.x), fract(a.y));\n      coord = floor(a) / vec2(128.,64.);\n      float m = step(texture2D(text, coord).x, 0.5) * (1.0 - 0.5 * step(edge, 0.25));\n      ${t.blinkingScreen?"m*=step(fract(2.*time),0.5);":""}\n      ${t.halfnegativeScreen?"m=mix(m,1.-m,step(coord.y, 0.5));":""}\n${t.screenAnimation?`\n      float sz = ${(1-t.screenAnimation[3]*t.screenAnimation[3]).toFixed(2)};\n      coord -= 0.5;\n      coord *= vec2(2.,1.) * ${(1-t.screenAnimation[3]*t.screenAnimation[3]).toFixed(2)};\n      coord += 0.5;\n      ${t.screenAnimation[1]<.2?`coord.y${t.screenAnimation[1]<.1?"+":"-"}=time;`:""}\n      ${t.screenAnimation[2]<.2?"coord.x-=time;":""}\n      coord=fract(coord);\n      m=mix(m,1.-m,step(shape(coord,2.*PI*time), 0.5));\n    `:""}\n      return mix(\n        vec3(0.01),\n        vec3(1.0),\n        ${t.negativeScreen?"1.-":""}m\n      );\n    }\n\n    return vec3(0.7 - 0.1 * noiseMetal - 0.2 * (hit.y - 2.2));\n  }\n  if (hit.y < 5.0) {\n    return sticker_color;\n  }\n  return vec3(0.0);\n}\n\nfloat fOpUnionChamfer(float a, float b, float r) {\n\treturn min(min(a, b), (a - r + b)*sqrt(0.5));\n}\n\n// ref: 5mm -> 0.1\nHIT sdLedgerNanoSPlus (vec3 p, float rot) {\n  float btn = sdBoxRoundZ(vec3(abs(p.x - 0.18) - 0.22, p.z, p.y - 0.155 + ${t.btnAnimate?"0.01*cubicInOut(1.-abs(cos(PI*(4.*time+0.5*step(0.,p.x-0.18)))))":"0."}), vec3(0.06, 0.03, 0.04), 0.03);\n  float case2d = sdBox2(p.xy, vec2(0.624, 0.174)-0.08)-0.08;\n  float swivel_hook = sdCylinder(p.xzy, vec3(-0.44, 0.0, 0.074));\n  float zcrop = abs(p.z)-0.101;\n  float front_carving = abs(p.z+0.12)-0.015;\n  float screen2 = sdBox2(\n    p.xy - vec2(0.18, 0.),\n    vec2(0.27, 0.12));\n  HIT s = HIT(max(\n    min(\n      opSmoothSubtraction(\n\t\t    min(\n          max(case2d+0.015, front_carving), // main casing carving\n          btn-0.004 // btns carving\n        ),\n        max(case2d, zcrop) - 0.01, // main casing\n        0.008\n      ),\n      min(\n        btn,\n        max(swivel_hook-0.015, abs(p.z)-0.12) // plastic in the casing for the swivel\n      )\n    ),\n    -swivel_hook // carve the swivel hook out\n  ), 2.05);\n  // screen\n  s = opU(s, HIT(max(s.x, screen2), 2.1));\n  // swivel\n  p.x += 0.04;\n  p.x += 0.4;\n  pR(p.xy, rot);\n  p.x -= 0.4;\n  float w = 0.54;\n  float x = p.x + 0.8;\n  float z = abs(p.z) - 0.12;\n  float swivel_radius = 0.192;\n  float swivel_metal_width = 0.006;\n  float rounding = 0.003;\n  float swivel = opSmoothSubtraction(\n    sdCylinder(p.xzy, vec3(-0.4, 0.0, 0.08)), // carved\n    min(\n      sdCappedCylinder(vec3(p.y, z, x - 0.4), swivel_radius, swivel_metal_width),\n      sdBox(vec3(x - 0.41 + w, p.y, z), vec3(w, swivel_radius, swivel_metal_width))\n    )-rounding,\n    0.04\n  );\n  // metal to close the swivel end\n  swivel = fOpUnionRound(swivel,\n    sdBox(vec3(x + 0.135 + w, p.y, p.z), vec3(swivel_metal_width, swivel_radius, 0.123))\n  ,0.01);\n  \n  noiseMetal = fbm(vec2(40.0, 1000.) * p.xy);\n  vec2 coord = fract(vec2(1.0, -3.0) * p.xy + vec2(0.5));\n  ${l?"coord.y = 1.0 - coord.y;":""}\n  vec4 mt = texture2D(metalText, coord);\n  float t = mix(0., grayscale(mt.rgb),mt.a * step(p.z, 0.) * step(p.x, -0.5) * step(abs(p.y), 0.16));\n  float swivelM = 2.2 + t;\n  s = opU(s, HIT(swivel, swivelM));\n  ${t.sticker?`\n      vec2 q = p.xy + vec2(${t.stickerPosX.toFixed(2)}, ${t.stickerPosY.toFixed(2)});\n      float sticker_size = 0.15;\n      float sticker_border = 0.01;\n      coord = fract(vec2(.5,-.5) * q / sticker_size - 0.5);\n      ${l?"coord.y = 1.0 - coord.y;":""}\n      vec4 v = texture2D(stickerText, coord);\n      sticker_color = mix(vec3(1.), v.rgb, v.a);\n      float l = length(q.xy)-sticker_size;\n      s = opU(s, HIT(max(\n        abs(p.z + 0.13)-0.005,\n        l-sticker_border\n      ), 4.2 - step(0.0, l)));\n  `:""}\n  return s;\n}\nHIT map (vec3 p) {\n  HIT s = HIT(10. - length(p), 0.);\n  float t = 3. * fract(${t.slowSwivelRotate?"0.5":"1."} * time);\n  float rot = ${t.swivelRotate?"PI * (\n    1. +\n    cubicInOut(min(1.0, t)) +\n    cubicInOut(min(1.0, max(t - 1.8, 0.0)))\n  )":t.swivelAngle.toFixed(2)};\n  s = opU(s, sdLedgerNanoSPlus(p, rot));\n  return s;\n}\nvec3 scene(vec2 uv) {\n  vec3 focus = vec3(0.0, 0.0, 0.);\n  vec3 c = vec3(0.);\n  vec3 origin = vec3(\n    ${t.motion[0].toFixed(2)}*${t.motionPhase[0]}(${t.motionAcc[0].toFixed(2)}*PI*time${t.motionComplex?`+cos(PI*${t.motionComplex.toFixed(1)}*time)`:""}),\n   0.5+${t.motion[1].toFixed(2)}*${t.motionPhase[1]}(${t.motionAcc[1].toFixed(2)}*PI*time${t.motionComplex?`+cos(PI*${t.motionComplex.toFixed(1)}*time)`:""}),\n   -1.8-${t.motion[2].toFixed(2)}*${t.motionPhase[2]}(${t.motionAcc[2].toFixed(2)}*PI*time${t.motionComplex?`+cos(PI*${t.motionComplex.toFixed(1)}*time)`:""})\n  );\n  vec3 p = origin;\n\n  vec3 dir = normalize(vec3(uv - .5, 1.));\n  dir = lookAt(origin, focus) * dir;\n  \n  HIT hit = marcher(p, dir);\n  vec3 n = normal(p);\n  c += lighting(hit, p, n, dir);\n  c = mix(c, sceneBgColor, pow(smoothstep(4., 10., length(p-origin)), .5));\n  return c;\n}\nvec3 render() {\n  vec3 c = vec3(0.);\n  vec2 ratio = resolution / max(resolution.x, resolution.y);\n  vec2 base = 0.5 + (uv - 0.5) * ratio${l?"*vec2(1.,-1.)":""};\n\n${s?"\n  for (float x=-.5; x<=.5; x += 1.) {\n    for (float y=-.5; y<=.5; y += 1.) {\n      vec2 d = 0.5 * vec2(x,y) / resolution;\n      vec2 p = base + d;\n      sceneBgColor = sceneBg(p);\n      c += scene(p);\n    }\n  }\n  c /= 4.0;":"\n  sceneBgColor = sceneBg(base);\n  c += scene(base);\n  "}\n  return c;\n}\nvoid main() {\n  vec3 c = render();\n  gl_FragColor = vec4(c, 1.0);\n}\n  `,g=e({frag:h,vert:"precision mediump float;attribute vec2 p;varying vec2 uv;void main(){uv=p;gl_Position=vec4(2.*p-1.,0,1);}",attributes:{p:[-2,0,0,-2,2,2]},uniforms:{text:e.texture(c(d)),metalText:e.texture(c(p)),stickerText:e.texture(c(m)),time:e.prop("time"),resolution:({viewportWidth:e,viewportHeight:t})=>[e,t]},count:3});let x=0;return e.frame((t=>{e.clear({depth:1,color:[0,0,0,1]});const n=u*o(x,t);g({time:n}),r(x,n),x++})),()=>e.destroy()}e.r(t),e.d(t,{art:()=>o,generate:()=>l});const r=["Black","Orange","White","Purple","Gold"],a={Black:"#1A1A1A",Orange:"#FC4F05",White:"#E6E6E6",Purple:"#C37AFC",Gold:"#FFBA33"};function i(e,t){let n=0;for(;n<t.length-1;n+=2)if(e<t[n+1])return t[n];return t[n]}function c(e,t,n){return[i(t,["minor",.15,"",.35,"major"]),n>5?"dancing":1===n?"":2==n?"quick":"fast",["horizontal","vertical","zoom"][e]].filter(Boolean).join(" ")}function l(e){const t=function(e){null==e&&(e=(new Date).getTime());let t=624,n=2147483648,o=2147483647,r=new Array(t),a=625;function i(e){for(r[0]=e>>>0,a=1;a<t;a++){let e=r[a-1]^r[a-1]>>>30;r[a]=(1812433253*((4294901760&e)>>>16)<<16)+1812433253*(65535&e)+a,r[a]>>>=0}}return"object"==typeof e?function(e,n){var o,a,c;for(i(19650218),o=1,a=0,c=t>n?t:n;c;c--){var l=r[o-1]^r[o-1]>>>30;r[o]=(r[o]^(1664525*((4294901760&l)>>>16)<<16)+1664525*(65535&l))+e[a]+a,r[o]>>>=0,a++,++o>=t&&(r[0]=r[623],o=1),a>=n&&(a=0)}for(c=623;c;c--)l=r[o-1]^r[o-1]>>>30,r[o]=(r[o]^(1566083941*((4294901760&l)>>>16)<<16)+1566083941*(65535&l))-o,r[o]>>>=0,++o>=t&&(r[0]=r[623],o=1);r[0]=2147483648}(e,e.length):i(e),()=>function(){var e,c=new Array(0,2567483615);if(a>=t){var l;for(625==a&&i(5489),l=0;l<227;l++)e=r[l]&n|r[l+1]&o,r[l]=r[l+397]^e>>>1^c[1&e];for(;l<623;l++)e=r[l]&n|r[l+1]&o,r[l]=r[l+-227]^e>>>1^c[1&e];e=r[623]&n|r[0]&o,r[623]=r[396]^e>>>1^c[1&e],a=0}return e=r[a++],e^=e>>>11,e^=e<<7&2636928640,e^=e<<15&4022730752,(e^=e>>>18)>>>0}()*(1/4294967296)}(e+12e5),n=u[e],o=9*t(),i=t()*t(),l=2*t()+.1/(.005+t()),d=t()*s(i,2*t()*t(),t()),m=t()/(.001+t());let h=Math.floor(r.length*t()*t());const g=[0,0,0],x=["cos","cos","cos"],v=[1,1,1],b=8*(t()-.5)*t();let y=[];if(t()<.9){const e=Math.floor(3*t()*t()),n=Math.floor(3*t());let o=.2+.8*t()*t(),r=Math.max(0,.5*t()-.25);const a=t()<.03?6:1+Math.floor(3*t()*t()),i=t()<.03?6:1+Math.floor(3*t()*t());o=s(o,o/a,t()),r=s(r,r/i,t()),r>.05&&(g[n]=r),v[e]=a,g[e]=o,y.push(c(e,o,a)),n!==e&&g[n]&&(y.push(c(n,r,i)),x[n]="sin",v[n]=i)}const w=y.length>0&&t()<.2?1+Math.floor(2*t()*t()):0,k=h<2&&t()<.3?t()<.7?"Orange":"Purple":t()<.1?"Black":"White",z=l>1&&h<2&&"Orange"!==k&&t()<.2;k===r[h]&&t()<.9&&(h=(h+1)%r.length);const A=t()<.05,S=t()<.005,I=t()<.7,T=t()<.2,$=I?t()<.05:t()<.3,P=!$&&(I?t()<.03:t()<.2);let j=5*(t()-.5);Math.abs(j)<.6&&(j=0);const C=I?T?"slowly animated":"animated":0===j?"fully opened":Math.abs(j)>Math.PI/2?"almost closed":"almost opened";let M,N,F,O;if(I||j){const e=f[Math.floor(2048*t())];e&&(F=F||e.emoji,M=e.text)}let B=t()<.02*(I?.2:1)?[t(),t(),t(),t(),t()]:0;const q=t()<.02+(B?.2:0);let R=t()<.1?[t(),t(),t(),t(),t()]:0;if((!M||t()<.01)&&(I||j)){const e=p[Math.floor(p.length*t())];e&&(F=F||e.emoji,O=e.emoji,N=e.text)}const _=.16*(t()<.5?-1:1)*(1-t()*t()),H=M?1.35+.1*t():1.4-.7*t()*t(),D={word:n,sentence:M,sticker:N,colorName:r[h],motion:g,motionPhase:x,motionAcc:v,motionComplex:w,blinkingScreen:P,negativeScreen:A,halfnegativeScreen:S,scrollingScreen:$,slowSwivelRotate:T,swivelRotate:I,swivelAngle:j,bgColor:k,lightPos:b,stickerPosY:_,stickerPosX:H,swivelPlotted:R,screenAnimation:B,btnAnimate:q,bgNoise:i,bgNoiseFreq:l,bgNoiseMotion:d,bgNoiseSeed:o,bgRadial:m,bgOrangeNoise:z,hasEmojis:F,hasEmojiSticker:O},E={Word:n,"Swivel Text":M,Sticker:N,Color:r[h],Background:k,"Background Noise":z?"Orange Noise":"","Swivel Plotted":R?"Yes":"No","Camera Motion Complex":w?"Yes":"No","Camera Motion":0===y.length?"None":y.join(" with "),"Primary Motion":y[0],"Secondary Motion":y[0],"Screen Color":S?"half-negative":A?"negative":"normal","Screen Animation":B?"complex":P?"blinking":$?"scrolling":"none",Swivel:C,"Buttons Animated":q?"Yes":"No",Emojis:F?"Yes":"No"},L=[];for(let e in E){const t=E[e];t&&L.push({trait_type:e,value:t})}const G="https://gateway.pinata.cloud/ipfs/QmUeTAQMPSQgVSBkjbWNAe3WCakNC2kvNCPAhvor18Em49/";return{opts:D,metadata:{name:`GNSP '${n}'`,description:`The collection has 2048 NFTs, one for each unique word in the BIP39 wordlist. '${n}' is the ${e+1}${0===e?"st":1===e?"nd":"th"} word of this wordlist.\n\nGNSP is short for Generative Nano S+ – Ledger's new hardware wallet – which this collection is celebrating. There are rarity aspects in the colors, background, animations and swivel engraved content.\n\nUsing a hardware wallet is important to secure your crypto and secure your NFTs. Made by @greweb – December 2021 – Kudos to the Ledger team`,image:G+e+".jpg",animation_url:G+e+".mp4",external_url:"https://greweb.me/gnsp/"+e,attributes:L,background_color:a[k]}}}function s(e,t,n){return e*(1-n)+t*n}const u=["abandon","ability","able","about","above","absent","absorb","abstract","absurd","abuse","access","accident","account","accuse","achieve","acid","acoustic","acquire","across","act","action","actor","actress","actual","adapt","add","addict","address","adjust","admit","adult","advance","advice","aerobic","affair","afford","afraid","again","age","agent","agree","ahead","aim","air","airport","aisle","alarm","album","alcohol","alert","alien","all","alley","allow","almost","alone","alpha","already","also","alter","always","amateur","amazing","among","amount","amused","analyst","anchor","ancient","anger","angle","angry","animal","ankle","announce","annual","another","answer","antenna","antique","anxiety","any","apart","apology","appear","apple","approve","april","arch","arctic","area","arena","argue","arm","armed","armor","army","around","arrange","arrest","arrive","arrow","art","artefact","artist","artwork","ask","aspect","assault","asset","assist","assume","asthma","athlete","atom","attack","attend","attitude","attract","auction","audit","august","aunt","author","auto","autumn","average","avocado","avoid","awake","aware","away","awesome","awful","awkward","axis","baby","bachelor","bacon","badge","bag","balance","balcony","ball","bamboo","banana","banner","bar","barely","bargain","barrel","base","basic","basket","battle","beach","bean","beauty","because","become","beef","before","begin","behave","behind","believe","below","belt","bench","benefit","best","betray","better","between","beyond","bicycle","bid","bike","bind","biology","bird","birth","bitter","black","blade","blame","blanket","blast","bleak","bless","blind","blood","blossom","blouse","blue","blur","blush","board","boat","body","boil","bomb","bone","bonus","book","boost","border","boring","borrow","boss","bottom","bounce","box","boy","bracket","brain","brand","brass","brave","bread","breeze","brick","bridge","brief","bright","bring","brisk","broccoli","broken","bronze","broom","brother","brown","brush","bubble","buddy","budget","buffalo","build","bulb","bulk","bullet","bundle","bunker","burden","burger","burst","bus","business","busy","butter","buyer","buzz","cabbage","cabin","cable","cactus","cage","cake","call","calm","camera","camp","can","canal","cancel","candy","cannon","canoe","canvas","canyon","capable","capital","captain","car","carbon","card","cargo","carpet","carry","cart","case","cash","casino","castle","casual","cat","catalog","catch","category","cattle","caught","cause","caution","cave","ceiling","celery","cement","census","century","cereal","certain","chair","chalk","champion","change","chaos","chapter","charge","chase","chat","cheap","check","cheese","chef","cherry","chest","chicken","chief","child","chimney","choice","choose","chronic","chuckle","chunk","churn","cigar","cinnamon","circle","citizen","city","civil","claim","clap","clarify","claw","clay","clean","clerk","clever","click","client","cliff","climb","clinic","clip","clock","clog","close","cloth","cloud","clown","club","clump","cluster","clutch","coach","coast","coconut","code","coffee","coil","coin","collect","color","column","combine","come","comfort","comic","common","company","concert","conduct","confirm","congress","connect","consider","control","convince","cook","cool","copper","copy","coral","core","corn","correct","cost","cotton","couch","country","couple","course","cousin","cover","coyote","crack","cradle","craft","cram","crane","crash","crater","crawl","crazy","cream","credit","creek","crew","cricket","crime","crisp","critic","crop","cross","crouch","crowd","crucial","cruel","cruise","crumble","crunch","crush","cry","crystal","cube","culture","cup","cupboard","curious","current","curtain","curve","cushion","custom","cute","cycle","dad","damage","damp","dance","danger","daring","dash","daughter","dawn","day","deal","debate","debris","decade","december","decide","decline","decorate","decrease","deer","defense","define","defy","degree","delay","deliver","demand","demise","denial","dentist","deny","depart","depend","deposit","depth","deputy","derive","describe","desert","design","desk","despair","destroy","detail","detect","develop","device","devote","diagram","dial","diamond","diary","dice","diesel","diet","differ","digital","dignity","dilemma","dinner","dinosaur","direct","dirt","disagree","discover","disease","dish","dismiss","disorder","display","distance","divert","divide","divorce","dizzy","doctor","document","dog","doll","dolphin","domain","donate","donkey","donor","door","dose","double","dove","draft","dragon","drama","drastic","draw","dream","dress","drift","drill","drink","drip","drive","drop","drum","dry","duck","dumb","dune","during","dust","dutch","duty","dwarf","dynamic","eager","eagle","early","earn","earth","easily","east","easy","echo","ecology","economy","edge","edit","educate","effort","egg","eight","either","elbow","elder","electric","elegant","element","elephant","elevator","elite","else","embark","embody","embrace","emerge","emotion","employ","empower","empty","enable","enact","end","endless","endorse","enemy","energy","enforce","engage","engine","enhance","enjoy","enlist","enough","enrich","enroll","ensure","enter","entire","entry","envelope","episode","equal","equip","era","erase","erode","erosion","error","erupt","escape","essay","essence","estate","eternal","ethics","evidence","evil","evoke","evolve","exact","example","excess","exchange","excite","exclude","excuse","execute","exercise","exhaust","exhibit","exile","exist","exit","exotic","expand","expect","expire","explain","expose","express","extend","extra","eye","eyebrow","fabric","face","faculty","fade","faint","faith","fall","false","fame","family","famous","fan","fancy","fantasy","farm","fashion","fat","fatal","father","fatigue","fault","favorite","feature","february","federal","fee","feed","feel","female","fence","festival","fetch","fever","few","fiber","fiction","field","figure","file","film","filter","final","find","fine","finger","finish","fire","firm","first","fiscal","fish","fit","fitness","fix","flag","flame","flash","flat","flavor","flee","flight","flip","float","flock","floor","flower","fluid","flush","fly","foam","focus","fog","foil","fold","follow","food","foot","force","forest","forget","fork","fortune","forum","forward","fossil","foster","found","fox","fragile","frame","frequent","fresh","friend","fringe","frog","front","frost","frown","frozen","fruit","fuel","fun","funny","furnace","fury","future","gadget","gain","galaxy","gallery","game","gap","garage","garbage","garden","garlic","garment","gas","gasp","gate","gather","gauge","gaze","general","genius","genre","gentle","genuine","gesture","ghost","giant","gift","giggle","ginger","giraffe","girl","give","glad","glance","glare","glass","glide","glimpse","globe","gloom","glory","glove","glow","glue","goat","goddess","gold","good","goose","gorilla","gospel","gossip","govern","gown","grab","grace","grain","grant","grape","grass","gravity","great","green","grid","grief","grit","grocery","group","grow","grunt","guard","guess","guide","guilt","guitar","gun","gym","habit","hair","half","hammer","hamster","hand","happy","harbor","hard","harsh","harvest","hat","have","hawk","hazard","head","health","heart","heavy","hedgehog","height","hello","helmet","help","hen","hero","hidden","high","hill","hint","hip","hire","history","hobby","hockey","hold","hole","holiday","hollow","home","honey","hood","hope","horn","horror","horse","hospital","host","hotel","hour","hover","hub","huge","human","humble","humor","hundred","hungry","hunt","hurdle","hurry","hurt","husband","hybrid","ice","icon","idea","identify","idle","ignore","ill","illegal","illness","image","imitate","immense","immune","impact","impose","improve","impulse","inch","include","income","increase","index","indicate","indoor","industry","infant","inflict","inform","inhale","inherit","initial","inject","injury","inmate","inner","innocent","input","inquiry","insane","insect","inside","inspire","install","intact","interest","into","invest","invite","involve","iron","island","isolate","issue","item","ivory","jacket","jaguar","jar","jazz","jealous","jeans","jelly","jewel","job","join","joke","journey","joy","judge","juice","jump","jungle","junior","junk","just","kangaroo","keen","keep","ketchup","key","kick","kid","kidney","kind","kingdom","kiss","kit","kitchen","kite","kitten","kiwi","knee","knife","knock","know","lab","label","labor","ladder","lady","lake","lamp","language","laptop","large","later","latin","laugh","laundry","lava","law","lawn","lawsuit","layer","lazy","leader","leaf","learn","leave","lecture","left","leg","legal","legend","leisure","lemon","lend","length","lens","leopard","lesson","letter","level","liar","liberty","library","license","life","lift","light","like","limb","limit","link","lion","liquid","list","little","live","lizard","load","loan","lobster","local","lock","logic","lonely","long","loop","lottery","loud","lounge","love","loyal","lucky","luggage","lumber","lunar","lunch","luxury","lyrics","machine","mad","magic","magnet","maid","mail","main","major","make","mammal","man","manage","mandate","mango","mansion","manual","maple","marble","march","margin","marine","market","marriage","mask","mass","master","match","material","math","matrix","matter","maximum","maze","meadow","mean","measure","meat","mechanic","medal","media","melody","melt","member","memory","mention","menu","mercy","merge","merit","merry","mesh","message","metal","method","middle","midnight","milk","million","mimic","mind","minimum","minor","minute","miracle","mirror","misery","miss","mistake","mix","mixed","mixture","mobile","model","modify","mom","moment","monitor","monkey","monster","month","moon","moral","more","morning","mosquito","mother","motion","motor","mountain","mouse","move","movie","much","muffin","mule","multiply","muscle","museum","mushroom","music","must","mutual","myself","mystery","myth","naive","name","napkin","narrow","nasty","nation","nature","near","neck","need","negative","neglect","neither","nephew","nerve","nest","net","network","neutral","never","news","next","nice","night","noble","noise","nominee","noodle","normal","north","nose","notable","note","nothing","notice","novel","now","nuclear","number","nurse","nut","oak","obey","object","oblige","obscure","observe","obtain","obvious","occur","ocean","october","odor","off","offer","office","often","oil","okay","old","olive","olympic","omit","once","one","onion","online","only","open","opera","opinion","oppose","option","orange","orbit","orchard","order","ordinary","organ","orient","original","orphan","ostrich","other","outdoor","outer","output","outside","oval","oven","over","own","owner","oxygen","oyster","ozone","pact","paddle","page","pair","palace","palm","panda","panel","panic","panther","paper","parade","parent","park","parrot","party","pass","patch","path","patient","patrol","pattern","pause","pave","payment","peace","peanut","pear","peasant","pelican","pen","penalty","pencil","people","pepper","perfect","permit","person","pet","phone","photo","phrase","physical","piano","picnic","picture","piece","pig","pigeon","pill","pilot","pink","pioneer","pipe","pistol","pitch","pizza","place","planet","plastic","plate","play","please","pledge","pluck","plug","plunge","poem","poet","point","polar","pole","police","pond","pony","pool","popular","portion","position","possible","post","potato","pottery","poverty","powder","power","practice","praise","predict","prefer","prepare","present","pretty","prevent","price","pride","primary","print","priority","prison","private","prize","problem","process","produce","profit","program","project","promote","proof","property","prosper","protect","proud","provide","public","pudding","pull","pulp","pulse","pumpkin","punch","pupil","puppy","purchase","purity","purpose","purse","push","put","puzzle","pyramid","quality","quantum","quarter","question","quick","quit","quiz","quote","rabbit","raccoon","race","rack","radar","radio","rail","rain","raise","rally","ramp","ranch","random","range","rapid","rare","rate","rather","raven","raw","razor","ready","real","reason","rebel","rebuild","recall","receive","recipe","record","recycle","reduce","reflect","reform","refuse","region","regret","regular","reject","relax","release","relief","rely","remain","remember","remind","remove","render","renew","rent","reopen","repair","repeat","replace","report","require","rescue","resemble","resist","resource","response","result","retire","retreat","return","reunion","reveal","review","reward","rhythm","rib","ribbon","rice","rich","ride","ridge","rifle","right","rigid","ring","riot","ripple","risk","ritual","rival","river","road","roast","robot","robust","rocket","romance","roof","rookie","room","rose","rotate","rough","round","route","royal","rubber","rude","rug","rule","run","runway","rural","sad","saddle","sadness","safe","sail","salad","salmon","salon","salt","salute","same","sample","sand","satisfy","satoshi","sauce","sausage","save","say","scale","scan","scare","scatter","scene","scheme","school","science","scissors","scorpion","scout","scrap","screen","script","scrub","sea","search","season","seat","second","secret","section","security","seed","seek","segment","select","sell","seminar","senior","sense","sentence","series","service","session","settle","setup","seven","shadow","shaft","shallow","share","shed","shell","sheriff","shield","shift","shine","ship","shiver","shock","shoe","shoot","shop","short","shoulder","shove","shrimp","shrug","shuffle","shy","sibling","sick","side","siege","sight","sign","silent","silk","silly","silver","similar","simple","since","sing","siren","sister","situate","six","size","skate","sketch","ski","skill","skin","skirt","skull","slab","slam","sleep","slender","slice","slide","slight","slim","slogan","slot","slow","slush","small","smart","smile","smoke","smooth","snack","snake","snap","sniff","snow","soap","soccer","social","sock","soda","soft","solar","soldier","solid","solution","solve","someone","song","soon","sorry","sort","soul","sound","soup","source","south","space","spare","spatial","spawn","speak","special","speed","spell","spend","sphere","spice","spider","spike","spin","spirit","split","spoil","sponsor","spoon","sport","spot","spray","spread","spring","spy","square","squeeze","squirrel","stable","stadium","staff","stage","stairs","stamp","stand","start","state","stay","steak","steel","stem","step","stereo","stick","still","sting","stock","stomach","stone","stool","story","stove","strategy","street","strike","strong","struggle","student","stuff","stumble","style","subject","submit","subway","success","such","sudden","suffer","sugar","suggest","suit","summer","sun","sunny","sunset","super","supply","supreme","sure","surface","surge","surprise","surround","survey","suspect","sustain","swallow","swamp","swap","swarm","swear","sweet","swift","swim","swing","switch","sword","symbol","symptom","syrup","system","table","tackle","tag","tail","talent","talk","tank","tape","target","task","taste","tattoo","taxi","teach","team","tell","ten","tenant","tennis","tent","term","test","text","thank","that","theme","then","theory","there","they","thing","this","thought","three","thrive","throw","thumb","thunder","ticket","tide","tiger","tilt","timber","time","tiny","tip","tired","tissue","title","toast","tobacco","today","toddler","toe","together","toilet","token","tomato","tomorrow","tone","tongue","tonight","tool","tooth","top","topic","topple","torch","tornado","tortoise","toss","total","tourist","toward","tower","town","toy","track","trade","traffic","tragic","train","transfer","trap","trash","travel","tray","treat","tree","trend","trial","tribe","trick","trigger","trim","trip","trophy","trouble","truck","true","truly","trumpet","trust","truth","try","tube","tuition","tumble","tuna","tunnel","turkey","turn","turtle","twelve","twenty","twice","twin","twist","two","type","typical","ugly","umbrella","unable","unaware","uncle","uncover","under","undo","unfair","unfold","unhappy","uniform","unique","unit","universe","unknown","unlock","until","unusual","unveil","update","upgrade","uphold","upon","upper","upset","urban","urge","usage","use","used","useful","useless","usual","utility","vacant","vacuum","vague","valid","valley","valve","van","vanish","vapor","various","vast","vault","vehicle","velvet","vendor","venture","venue","verb","verify","version","very","vessel","veteran","viable","vibrant","vicious","victory","video","view","village","vintage","violin","virtual","virus","visa","visit","visual","vital","vivid","vocal","voice","void","volcano","volume","vote","voyage","wage","wagon","wait","walk","wall","walnut","want","warfare","warm","warrior","wash","wasp","waste","water","wave","way","wealth","weapon","wear","weasel","weather","web","wedding","weekend","weird","welcome","west","wet","whale","what","wheat","wheel","when","where","whip","whisper","wide","width","wife","wild","will","win","window","wine","wing","wink","winner","winter","wire","wisdom","wise","wish","witness","wolf","woman","wonder","wood","wool","word","work","world","worry","worth","wrap","wreck","wrestle","wrist","write","wrong","yard","year","yellow","you","young","youth","zebra","zero","zone","zoo"],d=[{text:"🚀",count:24},{text:"💪",count:12},{text:"🤌",count:9},{text:"🦾",count:8},{text:"✊",count:7},{text:"😻",count:5},{text:"😍",count:5},{text:"🎁",count:5},{text:"🧠",count:4},{text:"😉",count:4},{text:"👀",count:4},{text:"❤️",count:4},{text:"🎉",count:4},{text:"🤝",count:4},{text:"🙏",count:4},{text:"🙌",count:4},{text:"👍",count:4},{text:"😅",count:4},{text:"👋",count:4},{text:"👏",count:4},{text:"🤫",count:4},{text:"😇",count:4},{text:"👑",count:4},{text:"💯",count:4},{text:"🥳",count:4},{text:"😎",count:4},{text:"🤯",count:4},{text:"😷",count:4},{text:"🤐",count:4},{text:"💅",count:3},{text:"👆",count:3},{text:"🤠",count:3},{text:"😄",count:3},{text:"👠",count:3},{text:"🍆",count:3},{text:"🤓",count:3},{text:"😭",count:2},{text:"🧑‍🌾",count:2},{text:"😱",count:2},{text:"🎃",count:2},{text:"🎨",count:2},{text:"👻",count:2}],p=[];d.forEach((e=>{e.emoji=!0;for(let t=0;t<e.count;t++)p.push(e)}));const m=[...d.map((({text:e,...t})=>({text:e+" "+e+" "+e,...t}))),{text:"Resilience by design",count:200},{text:"Not Your Keys,\nNot Your Coins",count:50},{text:"vires in numeris",count:40},{text:"Not Your Keys,\nNot Your NFTs",count:20},{text:"It's your NFT, protect it.",count:20},{text:"in code we trust",count:20},{text:"HODL",count:20},{text:"FOMO",count:20},{text:"DYOR",count:20},{text:"WAGMI",count:20},{text:"wagmi",count:20},{text:"LFG",count:20},{text:"gm",count:20},{text:"GMI",count:10},{text:"Pragmatism",count:10},{text:"Audacity",count:10},{text:"Safe",count:10},{text:"Secure",count:10},{text:"DNA",count:10},{text:"Trust",count:10},{text:"Transparency",count:10},{text:"Probably Nothing",count:10},{text:"Diamond Hands",count:5},{text:"Frens",count:5},{text:"This is the way",count:5},{text:"YOLO",count:5},{text:"FUD",count:5},{text:"OG",count:5},{text:"Few",count:5},{text:"N.B.",count:5},{text:"Seems legit",count:5},{text:"Wen Moon",count:5},{text:"NFA",count:5},{text:"Ser",count:10},{text:"Ad Augusta per Angusta",count:5},{text:"looks rare",count:3},{text:"to the moon",count:5},{text:"Bitcoin to the moon",count:5},{text:"Litecoin to the moon",count:5},{text:"Ethereum to the moon",count:5},{text:"Down the rabbit hole",count:5},{text:"I protect my NFTs",count:5},{text:"Don't Trust, Verify.",count:5},{text:"Origin",count:8},{text:"Ledger Live",count:8},{text:"Vault gang",count:8},{text:"It's not in the wallet",count:4},{text:"Keep it safe",count:4},{text:"Special Edition",count:4},{text:"Soul",count:4},{text:"Pandi Panda",count:2},{text:"San Francisco",count:4},{text:"Paris",count:4},{text:"Vierzon",count:4},{text:"#bardak",count:2},{text:"hackathon",count:2},{text:"#lesroisdutrade",count:2},{text:"Cloud",count:1},{text:"Mail",count:1},{text:"Void",count:4},{text:"NGMI",count:2},{text:"COPE",count:2},{text:"ELON",count:2},{text:"Eric",count:2},{text:"Nicolas",count:2},{text:"David",count:2},{text:"Joel",count:2},{text:"Thomas",count:2},{text:"JMP",count:2},{text:"Antoine",count:2},{text:"Pascal",count:2},{text:"Quentin",count:2},{text:"Charles",count:2},{text:"Ian",count:2},{text:"Alexandre",count:2},{text:"Matt",count:2},{text:"Thibaut",count:2},{text:"Meri",count:2},{text:"Alix",count:2},{text:"Hugo",count:2},{text:"Gaëtan",count:2},{text:"Brian",count:2},{text:"Gabriel",count:2},{text:"Yacine",count:2},{text:"Nicolas",count:2},{text:"Baptiste",count:2},{text:"Fredy",count:2},{text:"Gaspard",count:2},{text:"Julien",count:2},{text:"Lidia",count:2},{text:"e=mc2",count:2},{text:"y^2 = x^3 + ax + b",count:2},{text:"e^(i•x) = cos(x) + i•sin(x)",count:2},{text:"all your base are belong to us",count:2},{text:"XRP",count:2},{text:"ETH",count:2},{text:"BTC",count:2},{text:"LTC",count:2},{text:"ADA",count:2},{text:"BNB",count:2},{text:"USDT",count:2},{text:"SOL",count:2},{text:"AVAX",count:2},{text:"DOT",count:2},{text:"LUNA",count:2},{text:"DOGE",count:2},{text:"SHIB",count:2},{text:"MATIC",count:2},{text:"CRO",count:2},{text:"ALGO",count:2},{text:"TRX",count:2},{text:"FIL",count:2},{text:"XTZ",count:2},{text:"XMR",count:2},{text:"EOS",count:2},{text:"ZEC",count:2},{text:"CELO",count:2},{text:"I collect @greweb",count:20},{text:"Cozomo de Medici",count:2},{text:"Snoop Dogg",count:2},{text:"I protect my GEN.ART tokens",count:5},{text:"I protect my AB mints",count:5},{text:"I protect my CryptoKitties",count:5},{text:"I protect my Bored Apes",count:5},{text:"I protect my CryptoPunks",count:5},{text:"Hal Finney",count:3},{text:"Satoshi Nakamoto",count:3},{text:"CryptoPunks",count:2},{text:"Nick Szabo",count:2},{text:"Adam Back",count:2},{text:"Who is Satoshi?",count:2},{text:"Winklevoss twins",count:2},{text:"don't have time to try\nto convince you, sorry.",count:1},{text:"Resilience",count:4},{text:"Sovereignty",count:4},{text:"This is crypto",count:4},{text:"Free Assange",count:2},{text:"The Internet of Money",count:2},{text:"Resistance",count:2},{text:"WENADA",count:2},{text:"@greweb",count:2},{text:"greweb.eth",count:2},{text:"gre",count:1},{text:"gre for jjb",count:1},{text:"btchip",count:1},{text:"Cancoillotte",count:1},{text:"Maple",count:1}],f=[];return m.forEach((e=>{for(let t=0;t<e.count;t++)f.push(e)})),t})()}));